  ## add router tcp route for postgres
- type: replace
  path: /instance_groups/name=postgres/jobs/-
  value:
    name: route_registrar
    release: routing
    consumes:
      nats-tls: { from: nats-tls, deployment: cf }
    properties:
      nats:
        tls:
          enabled: true
          client_cert: ((/bosh-autoscaler/cf/nats_client_cert.certificate))
          client_key: ((/bosh-autoscaler/cf/nats_client_cert.private_key))
      route_registrar:
        routing_api:
          ca_certs:
          - ((!routing_api_ca_certs))
          client_cert: ((!routing_api_tls_client_cert))
          client_secret: ((routing_api_client_secret))
          client_private_key: ((!routing_api_tls_client_private_key))
          server_ca_cert: ((!routing_api_server_ca_cert))
          api_url: "https://api.((system_domain)):443"
          oauth_url: "https://uaa.((system_domain)):443"
        routes:
          - name: ((deployment_name))_postgres
            registration_interval: 5s
            port: 5432
            external_port: ((postgres_external_port))
            type: tcp
            router_group: default-tcp
            tags:
              component: autoscaler_postgres
              deployment: ((deployment_name))
            uris:
              - ((deployment_name))-postgres.tcp.((system_domain))

- type: replace
  path: /instance_groups/name=apiserver/jobs/name=golangapiserver/properties/autoscaler/apiserver/metrics_forwarder/host
  value: ((deployment_name))-metricsforwarder.((system_domain))


- type: replace
  path: /variables/name=postgres_server/options/alternative_names/-
  value: ((deployment_name))-postgres.tcp.((system_domain))

- type: replace
  path: /variables/name=postgres_client/options/alternative_names/-
  value: ((deployment_name))-postgres.tcp.((system_domain))

- type: remove
  path: /instance_groups/name=metricsforwarder


## SCALINGENGINE - Enable cf Server to receive calls from api running on cf --
- type: replace
  path: /instance_groups/name=scalingengine/jobs/name=scalingengine/properties/autoscaler/scalingengine/cf_server?/xfcc?/valid_org_guid?
  value: ((autoscaler_cf_server_xfcc_valid_org_guid))

- type: replace
  path: /instance_groups/name=scalingengine/jobs/name=scalingengine/properties/autoscaler/scalingengine/cf_server?/xfcc?/valid_space_guid?
  value: ((autoscaler_cf_server_xfcc_valid_space_guid))


- type: replace
  path: /instance_groups/name=scalingengine/jobs/name=scalingengine/properties/autoscaler/scalingengine/cf_server?/port?
  value: &scalingEngineCfPort 6205

- type: replace
  path: /instance_groups/name=postgres/jobs/name=route_registrar/properties/route_registrar/routes/-
  value:
    name: ((deployment_name))-cf-scalingengine
    registration_interval: 20s
    port: *scalingEngineCfPort
    tags:
      component: autoscaler_cf_scalingengine
    uris:
      - ((deployment_name))-cf-scalingengine.((system_domain))

## EVENTGENERATOR - Enable cf Server to receive calls from api running on cf --

- type: replace
  path: /instance_groups/name=eventgenerator/jobs/name=eventgenerator/properties/autoscaler/eventgenerator/cf_server?/xfcc?/valid_org_guid?
  value: ((autoscaler_cf_server_xfcc_valid_org_guid))

- type: replace
  path: /instance_groups/name=eventgenerator/jobs/name=eventgenerator/properties/autoscaler/eventgenerator/cf_server?/xfcc?/valid_space_guid?
  value: ((autoscaler_cf_server_xfcc_valid_space_guid))


- type: replace
  path: /instance_groups/name=eventgenerator/jobs/name=eventgenerator/properties/autoscaler/eventgenerator/cf_server?/port?
  value: &EventGeneratorCfPort 6205

- type: replace
  path: /instance_groups/name=postgres/jobs/name=route_registrar/properties/route_registrar/routes/-
  value:
    name: ((deployment_name))-cf-eventgenerator
    registration_interval: 20s
    port: *EventGeneratorCfPort
    tags:
      component: autoscaler_cf_eventgenerator
    uris:
      - ((deployment_name))-cf-eventgenerator.((system_domain))
