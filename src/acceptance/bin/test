#!/bin/bash

set -eo pipefail

bin_dir=$(dirname "${BASH_SOURCE[0]}")
pushd "${bin_dir}/.." > /dev/null
  MIN_GO_VERSION=$(cat go.mod | grep --extended-regexp '^go\s[0-9.]+$'  | awk '{print $2}' | sed -E 's/[0-9]+\.([0-9]+).*/\1/')

  which go > /dev/null || {\
    echo "ERROR: golang 1.${MIN_GO_VERSION} needs to be installed to run these tests. " 1>&2;\
    exit 1;\
  }

  # retrieve current go version not in the context of the acceptance module
  # this ensures that no additional go toolchain downloads happen because the module requires another version
  pushd "$(mktemp -d)" > /dev/null
    minor_version="$(go version | cut -d ' ' -f 3 | sed -E 's/go[0-9]+\.([0-9]+).*/\1/')"
  popd

  [ "${minor_version}" -lt "${MIN_GO_VERSION}" ] && { \
    echo "ERROR: golang version 1.${MIN_GO_VERSION} or above needs to be installed to use the acceptance tests" 1>&2;\
    exit 1;\
  }
  echo "# Acceptance tests"
  # build ginkgo binary if no one specified path to it
  if [[ -z "$GINKGO_BINARY" ]]; then
    echo " - building ginkgo"
    go build -o ginkgo_v2 github.com/onsi/ginkgo/v2/ginkgo
    GINKGO_BINARY="./ginkgo_v2"
  fi

  # shellcheck disable=SC2068
  echo " - running ginkgo v2 with: '${*}'"

  "${GINKGO_BINARY}" "$@"
popd > /dev/null
