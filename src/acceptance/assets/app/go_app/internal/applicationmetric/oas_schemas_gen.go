// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"net/url"

	"github.com/go-faster/errors"
)

func (s *ErrorResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Object containing metric history.
// Ref: #/components/schemas/ApplicationMetric
type ApplicationMetric struct {
	// Identificator used by Cloud Foundry for entities.
	// Anything is an entity. Apps, services, service-bindings, â€¦.
	AppGUID OptString `json:"app_guid"`
	// Application Metric.
	InstanceIndex OptInt `json:"instanceIndex"`
	// The scaling time in the number of nanoseconds elapsed since January 1, 1970 UTC.
	Timestamp OptInt `json:"timestamp"`
	// The time at which the metrics were collected in the number of nanoseconds.
	CollectedAt OptInt `json:"collected_at"`
	// One user-defined custom metric type or one of the system-default metric types, which are:
	// "memoryused", "memoryutil", "responsetime", "throughput" and "cpu".
	MetricType OptString `json:"metric_type"`
	// The value of metric type to be returned as the aggregated metric result of an application.
	Value OptInt    `json:"value"`
	Unit  OptString `json:"unit"`
}

// GetAppGUID returns the value of AppGUID.
func (s *ApplicationMetric) GetAppGUID() OptString {
	return s.AppGUID
}

// GetInstanceIndex returns the value of InstanceIndex.
func (s *ApplicationMetric) GetInstanceIndex() OptInt {
	return s.InstanceIndex
}

// GetTimestamp returns the value of Timestamp.
func (s *ApplicationMetric) GetTimestamp() OptInt {
	return s.Timestamp
}

// GetCollectedAt returns the value of CollectedAt.
func (s *ApplicationMetric) GetCollectedAt() OptInt {
	return s.CollectedAt
}

// GetMetricType returns the value of MetricType.
func (s *ApplicationMetric) GetMetricType() OptString {
	return s.MetricType
}

// GetValue returns the value of Value.
func (s *ApplicationMetric) GetValue() OptInt {
	return s.Value
}

// GetUnit returns the value of Unit.
func (s *ApplicationMetric) GetUnit() OptString {
	return s.Unit
}

// SetAppGUID sets the value of AppGUID.
func (s *ApplicationMetric) SetAppGUID(val OptString) {
	s.AppGUID = val
}

// SetInstanceIndex sets the value of InstanceIndex.
func (s *ApplicationMetric) SetInstanceIndex(val OptInt) {
	s.InstanceIndex = val
}

// SetTimestamp sets the value of Timestamp.
func (s *ApplicationMetric) SetTimestamp(val OptInt) {
	s.Timestamp = val
}

// SetCollectedAt sets the value of CollectedAt.
func (s *ApplicationMetric) SetCollectedAt(val OptInt) {
	s.CollectedAt = val
}

// SetMetricType sets the value of MetricType.
func (s *ApplicationMetric) SetMetricType(val OptString) {
	s.MetricType = val
}

// SetValue sets the value of Value.
func (s *ApplicationMetric) SetValue(val OptInt) {
	s.Value = val
}

// SetUnit sets the value of Unit.
func (s *ApplicationMetric) SetUnit(val OptString) {
	s.Unit = val
}

// Object containing Application Metrics.
// Ref: #/components/schemas/Application_Metrics
type ApplicationMetrics struct {
	// Number of history entries found for the given query.
	TotalResults OptInt64 `json:"total_results"`
	// Number of Pages from the query.
	TotalPages OptInt64 `json:"total_pages"`
	// Number of the current page.
	Page      OptInt64            `json:"page"`
	PrevURL   OptURI              `json:"prev_url"`
	NextURL   OptURI              `json:"next_url"`
	Resources []ApplicationMetric `json:"resources"`
}

// GetTotalResults returns the value of TotalResults.
func (s *ApplicationMetrics) GetTotalResults() OptInt64 {
	return s.TotalResults
}

// GetTotalPages returns the value of TotalPages.
func (s *ApplicationMetrics) GetTotalPages() OptInt64 {
	return s.TotalPages
}

// GetPage returns the value of Page.
func (s *ApplicationMetrics) GetPage() OptInt64 {
	return s.Page
}

// GetPrevURL returns the value of PrevURL.
func (s *ApplicationMetrics) GetPrevURL() OptURI {
	return s.PrevURL
}

// GetNextURL returns the value of NextURL.
func (s *ApplicationMetrics) GetNextURL() OptURI {
	return s.NextURL
}

// GetResources returns the value of Resources.
func (s *ApplicationMetrics) GetResources() []ApplicationMetric {
	return s.Resources
}

// SetTotalResults sets the value of TotalResults.
func (s *ApplicationMetrics) SetTotalResults(val OptInt64) {
	s.TotalResults = val
}

// SetTotalPages sets the value of TotalPages.
func (s *ApplicationMetrics) SetTotalPages(val OptInt64) {
	s.TotalPages = val
}

// SetPage sets the value of Page.
func (s *ApplicationMetrics) SetPage(val OptInt64) {
	s.Page = val
}

// SetPrevURL sets the value of PrevURL.
func (s *ApplicationMetrics) SetPrevURL(val OptURI) {
	s.PrevURL = val
}

// SetNextURL sets the value of NextURL.
func (s *ApplicationMetrics) SetNextURL(val OptURI) {
	s.NextURL = val
}

// SetResources sets the value of Resources.
func (s *ApplicationMetrics) SetResources(val []ApplicationMetric) {
	s.Resources = val
}

type BasicAuthentication struct {
	Username string
	Password string
}

// GetUsername returns the value of Username.
func (s *BasicAuthentication) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *BasicAuthentication) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *BasicAuthentication) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *BasicAuthentication) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct{}

// ErrorResponseStatusCode wraps ErrorResponse with StatusCode.
type ErrorResponseStatusCode struct {
	StatusCode int
	Response   ErrorResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorResponseStatusCode) GetResponse() ErrorResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorResponseStatusCode) SetResponse(val ErrorResponse) {
	s.Response = val
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection returns new OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection with value set to v.
func NewOptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection(v V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection {
	return OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection is optional V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection.
type OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection struct {
	Value V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection
	Set   bool
}

// IsSet returns true if OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection was set.
func (o OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) Reset() {
	var v V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) SetTo(v V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) Get() (v V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) Or(d V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection string

const (
	V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionAsc  V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection = "asc"
	V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionDesc V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection = "desc"
)

// MarshalText implements encoding.TextMarshaler.
func (s V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionAsc:
		return []byte(s), nil
	case V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionDesc:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection) UnmarshalText(data []byte) error {
	switch V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirection(data) {
	case V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionAsc:
		*s = V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionAsc
		return nil
	case V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionDesc:
		*s = V1AppsGUIDAggregatedMetricHistoriesMetricTypeGetOrderDirectionDesc
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
