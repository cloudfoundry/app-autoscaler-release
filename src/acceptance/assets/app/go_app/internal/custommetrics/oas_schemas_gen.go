// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrorResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	// The textual error code.
	Code OptString `json:"code"`
	// The message describing the cause of the error.
	Message OptString `json:"message"`
}

// GetCode returns the value of Code.
func (s *ErrorResponse) GetCode() OptString {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *ErrorResponse) GetMessage() OptString {
	return s.Message
}

// SetCode sets the value of Code.
func (s *ErrorResponse) SetCode(val OptString) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *ErrorResponse) SetMessage(val OptString) {
	s.Message = val
}

// ErrorResponseStatusCode wraps ErrorResponse with StatusCode.
type ErrorResponseStatusCode struct {
	StatusCode int
	Response   ErrorResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorResponseStatusCode) GetResponse() ErrorResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorResponseStatusCode) SetResponse(val ErrorResponse) {
	s.Response = val
}

// Ref: #/components/schemas/Metric
type Metric struct {
	// The name of the custom metric, must have been defined by using it in the scaling policy for the
	// application before submitting.
	Name string `json:"name"`
	// The value of the custom metric.
	Value float64 `json:"value"`
	// An optional unit for the metric, for display purposes only.
	Unit OptString `json:"unit"`
}

// GetName returns the value of Name.
func (s *Metric) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *Metric) GetValue() float64 {
	return s.Value
}

// GetUnit returns the value of Unit.
func (s *Metric) GetUnit() OptString {
	return s.Unit
}

// SetName sets the value of Name.
func (s *Metric) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *Metric) SetValue(val float64) {
	s.Value = val
}

// SetUnit sets the value of Unit.
func (s *Metric) SetUnit(val OptString) {
	s.Unit = val
}

// Ref: #/components/schemas/Metrics
type Metrics struct {
	// The index of the application instance the custom metrics are submitted for. Can be found in the
	// `CF_INSTANCE_INDEX` environment variable.
	InstanceIndex int64 `json:"instance_index"`
	// The custom metrics to be submitted.
	Metrics []Metric `json:"metrics"`
}

// GetInstanceIndex returns the value of InstanceIndex.
func (s *Metrics) GetInstanceIndex() int64 {
	return s.InstanceIndex
}

// GetMetrics returns the value of Metrics.
func (s *Metrics) GetMetrics() []Metric {
	return s.Metrics
}

// SetInstanceIndex sets the value of InstanceIndex.
func (s *Metrics) SetInstanceIndex(val int64) {
	s.InstanceIndex = val
}

// SetMetrics sets the value of Metrics.
func (s *Metrics) SetMetrics(val []Metric) {
	s.Metrics = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// V1AppsAppGuidMetricsPostOK is response for V1AppsAppGuidMetricsPost operation.
type V1AppsAppGuidMetricsPostOK struct{}
