---
name: eventgenerator
templates:
  pre-start.erb: bin/pre-start
  eventgenerator_ctl: bin/eventgenerator_ctl
  eventgenerator.yml.erb: config/eventgenerator.yml
  metricscollector_ca.crt.erb: config/certs/metricscollector/ca.crt
  metricscollector_client.crt.erb: config/certs/metricscollector/client.crt
  metricscollector_client.key.erb: config/certs/metricscollector/client.key
  scalingengine_ca.crt.erb: config/certs/scalingengine/ca.crt
  scalingengine_client.crt.erb: config/certs/scalingengine/client.crt
  scalingengine_client.key.erb: config/certs/scalingengine/client.key

packages:
  - java
  - db
  - eventgenerator
  - common

properties:
  policy_db.address:
    description: "IP address on which the policydb server will listen"
    default: "postgres.service.cf.internal"
  policy_db.databases:
    description: "The list of databases used in policydb database including name"
  policy_db.db_scheme:
    description: "Database scheme to be used to access policydb"
  policy_db.port:
    description: "Port on which the policydb server will listen"
  policy_db.roles:
    description: "The list of database roles used in policydb database including name/password"

  appmetrics_db.address:
    description: "IP address on which the appmetricsdb server will listen"
    default: "postgres.service.cf.internal"
  appmetrics_db.databases:
    description: "The list of databases used in appmetricsdb database including name"
  appmetrics_db.db_scheme:
    description: "Database scheme to be used to access appmetricsdb"
  appmetrics_db.port:
    description: "Port on which the appmetricsdb server will listen"
  appmetrics_db.roles:
    description: "The list of database roles used in appmetricsdb database including name/password"

  lock_db.address:
    description: "IP address on which the lockdb server will listen"
    default: "postgres.service.cf.internal"
  lock_db.databases:
    description: "The list of databases used in lockdb database including name"
  lock_db.db_scheme:
    description: "Database scheme to be used to access lockdb"
  lock_db.port:
    description: "Port on which the lockdb server will listen"
  lock_db.roles:
    description: "The list of database roles used in lockdb database including name/password"

  eventgenerator.logging.level:
    description: "the level of logging"
    default: "info"
  eventgenerator.server.port:
    description: "the listening port of server"
    default: 6105

  eventgenerator.aggregator.aggregator_execute_interval: 
    description: "the time interval to aggregate metrics data"
    default: 40s
  eventgenerator.aggregator.policy_poller_interval: 
    description: "the time interval to poll policies"
    default: 40s
  eventgenerator.aggregator.metric_poller_count: 
    description: "the number of metrics poller"
    default: 20
  eventgenerator.aggregator.app_monitor_channel_size: 
    description: "the size of app monitor channel"
    default: 200

  eventgenerator.evaluator.evaluation_manager_execute_interval: 
    description: "the time interval to evaluate rules"
    default: 40s
  eventgenerator.evaluator.evaluator_count: 
    description: "the number of evaluators"
    default: 20
  eventgenerator.evaluator.trigger_array_channel_size: 
    description: "the size of the trigger array channel"
    default: 200
  
  eventgenerator.scaling_engine.host:
    description: "Host where the scaling engine is running"
    default: "scalingengine.service.cf.internal"

  eventgenerator.scaling_engine.port:
    description: "Port where the scaling engine will listen"
    default: 6104

  eventgenerator.scaling_engine.ca_cert:
    description: "PEM-encoded CA certificate"

  eventgenerator.scaling_engine.client_cert:
    description: "PEM-encoded client certificate"

  eventgenerator.scaling_engine.client_key:
    description: "PEM-encoded client key"

  eventgenerator.metricscollector.host:
    description: "Host where the metrics collector is running"
    default: "metricscollector.service.cf.internal"

  eventgenerator.metricscollector.port:
    description: "Port where the metrics collector will listen"
    default: 6103

  eventgenerator.metricscollector.ca_cert:
    description: "PEM-encoded CA certificate"

  eventgenerator.metricscollector.client_cert:
    description: "PEM-encoded client certificate"

  eventgenerator.metricscollector.client_key:
    description: "PEM-encoded client key"

  eventgenerator.lock.lock_ttl:
    description: "consul lock ttl duration"
    default: 15s
  eventgenerator.lock.lock_retry_interval:
    description: "consul lock retry interval"
    default: 10s
  eventgenerator.lock.consul_cluster_config:
    description: "consul cluster configuration"
    default: http://127.0.0.1:8500

  eventgenerator.defaultStatWindowSecs:
    description: "Default value for stat_window_secs"
    default: 300

  eventgenerator.defaultBreachDurationSecs:
    description: "Default value for breach_duration_secs"
    default: 300

  eventgenerator.enable_db_lock:
    descrption: "Enable database lock flag"
    default: false

  eventgenerator.circuitBreaker.back_off_initial_interval:
    description: "Initial exponential back off interval"
    default: 5m

  eventgenerator.circuitBreaker.back_off_max_interval:
    description: "Maximum exponential back off interval"
    default: 120m

  eventgenerator.circuitBreaker.consecutive_failure_count:
    description: "Number of consecutive failure to trip the circuit down"
    default: 3
