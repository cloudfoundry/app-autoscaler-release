<%
  def p_arr(property)
    p(property,nil) || []
  end

  policy_db_scheme = p('policy_db.db_scheme')
  policy_db_address = p('policy_db.address')
  policy_db_port = p('policy_db.port')
  policy_db_role = p_arr('policy_db.roles').find { |role| role['tag'] == 'policydb' or role['tag'] == 'default'  }
  policy_db_database = p_arr('policy_db.databases').find { |database| database['tag'] == 'policydb' or database['tag'] == 'default' }
  policy_db_url = policy_db_scheme + "://" + policy_db_role['name'] + ":" + policy_db_role['password'] + "@" + policy_db_address + ":" + policy_db_port.to_s + "/" + policy_db_database['name'] + "?sslmode=disable"
%>

db:
  policy_db:
    url: <%= policy_db_url %>
    max_open_connections: <%= p("policy_db_connection_config.max_open_connections") %>
    max_idle_connections: <%= p("policy_db_connection_config.max_idle_connections") %>
    connection_max_lifetime: <%= p("policy_db_connection_config.connection_max_lifetime") %>
logging:
  level: <%= p("metricsforwarder.logging.level") %>
metron_address: <%= p("metricsforwarder.metron_address") %>
server:
  port: <%= p("metricsforwarder.server.port") %>
loggregator:
  ca_cert: /var/vcap/jobs/metricsforwarder/config/certs/loggregator/ca.crt
  client_cert: /var/vcap/jobs/metricsforwarder/config/certs/loggregator/client.crt
  client_key: /var/vcap/jobs/metricsforwarder/config/certs/loggregator/client.key
