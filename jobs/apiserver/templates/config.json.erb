<% 
  # returns an empty array of the value is null
  def p_arr(property)
    p(property,nil) || []
  end

  db_scheme = p('policy_db.db_scheme')
  address = p('policy_db.address')
  db_port = p('policy_db.port')
  role = p_arr('policy_db.roles').find { |role| role['tag'] == 'policydb' or role['tag'] == 'default'} 
  database = p_arr('policy_db.databases').find { |database| database['tag'] == 'policydb' or database['tag'] == 'default'} 
  scheduler_host = p('api_server.scheduler.host')
  scheduler_port = p('api_server.scheduler.port')
  scaling_engine_host = p('api_server.scaling_engine.host')
  scaling_engine_port = p('api_server.scaling_engine.port')
  metrics_collector_host = p('api_server.metrics_collector.host')
  metrics_collector_port = p('api_server.metrics_collector.port')

  params = {
    'port' => p('api_server.port'),
    'publicPort' => p('api_server.publicPort'),
    'db' => {
       'maxConnections' => p('api_server.db_config.max_connections'),
       'minConnections' => p('api_server.db_config.min_connections'),
       'idleTimeout' => p('api_server.db_config.idle_timeout'),
       'uri' => db_scheme + "://" + role['name'] + ":" + role['password'] + "@" + address + ":" + db_port.to_s + "/" + database['name']  ,
     },
    'scheduler' => {
       'uri' => "https://" + scheduler_host + ":" + scheduler_port.to_s,
       'tls' => {
           'keyFile' => "/var/vcap/jobs/apiserver/config/certs/scheduler/client.key",
           'certFile' => "/var/vcap/jobs/apiserver/config/certs/scheduler/client.crt",
           'caCertFile' => "/var/vcap/jobs/apiserver/config/certs/scheduler/ca.crt"
       },
    },
    'scalingEngine' => {
       'uri' => "https://" + scaling_engine_host + ":" + scaling_engine_port.to_s,
       'tls' => {
           'keyFile' => "/var/vcap/jobs/apiserver/config/certs/scalingengine/client.key",
           'certFile' => "/var/vcap/jobs/apiserver/config/certs/scalingengine/client.crt",
           'caCertFile' => "/var/vcap/jobs/apiserver/config/certs/scalingengine/ca.crt"
       },
    },
    'metricsCollector' => {
       'uri' => "https://" + metrics_collector_host + ":" + metrics_collector_port.to_s,
       'tls' => {
           'keyFile' => "/var/vcap/jobs/apiserver/config/certs/metricscollector/client.key",
           'certFile' => "/var/vcap/jobs/apiserver/config/certs/metricscollector/client.crt",
           'caCertFile' => "/var/vcap/jobs/apiserver/config/certs/metricscollector/ca.crt"
       },
    },
    'tls' => {
        'keyFile' => "/var/vcap/jobs/apiserver/config/certs/apiserver/server.key",
        'certFile' => "/var/vcap/jobs/apiserver/config/certs/apiserver/server.crt",
        'caCertFile' => "/var/vcap/jobs/apiserver/config/certs/apiserver/ca.crt"
    },
    'publicTls' => {
        'keyFile' => "/var/vcap/jobs/apiserver/config/certs/apiserver/public_server.key",
        'certFile' => "/var/vcap/jobs/apiserver/config/certs/apiserver/public_server.crt",
        'caCertFile' => "/var/vcap/jobs/apiserver/config/certs/apiserver/public_ca.crt"
    },
  }
%>

<%=JSON.pretty_generate(params, :indentation => 2)%> 

