---
name: apiserver

templates:
  apiserver.erb: bin/apiserver
  config.json.erb: config/config.json
  info.json.erb: bin/info.json
  pre-start.erb: bin/pre-start
  dns_health_check.erb: bin/dns_health_check
  apiserver_ca.crt.erb: config/certs/apiserver/ca.crt
  apiserver_server.crt.erb: config/certs/apiserver/server.crt
  apiserver_server.key.erb: config/certs/apiserver/server.key
  apiserver_public_ca.crt.erb: config/certs/apiserver/public_ca.crt
  apiserver_public_server.crt.erb: config/certs/apiserver/public_server.crt
  apiserver_public_server.key.erb: config/certs/apiserver/public_server.key
  scalingengine_ca.crt.erb: config/certs/scalingengine/ca.crt
  scalingengine_client.crt.erb: config/certs/scalingengine/client.crt
  scalingengine_client.key.erb: config/certs/scalingengine/client.key
  scheduler_ca.crt.erb: config/certs/scheduler/ca.crt
  scheduler_client.crt.erb: config/certs/scheduler/client.crt
  scheduler_client.key.erb: config/certs/scheduler/client.key
  metricscollector_ca.crt.erb: config/certs/metricscollector/ca.crt
  metricscollector_client.crt.erb: config/certs/metricscollector/client.crt
  metricscollector_client.key.erb: config/certs/metricscollector/client.key
  environment_variables.erb: bin/environment_variables
  servicebroker_ca.crt.erb: config/certs/servicebroker/ca.crt
  servicebroker_client.crt.erb: config/certs/servicebroker/client.crt
  servicebroker_client.key.erb: config/certs/servicebroker/client.key
  eventgenerator_ca.crt.erb: config/certs/eventgenerator/ca.crt
  eventgenerator_client.crt.erb: config/certs/eventgenerator/client.crt
  eventgenerator_client.key.erb: config/certs/eventgenerator/client.key
  policy_db_ca.crt.erb: config/certs/policy_db/ca.crt
  hooks/pre-start.sh.erb: bin/hooks/pre-start.sh
  hooks/pre-stop.sh.erb: bin/hooks/pre-stop.sh
  hooks/post-start.sh.erb: bin/hooks/post-start.sh
  hooks/post-stop.sh.erb: bin/hooks/post-stop.sh

packages:
  - nodejs
  - apiserver
  - db
  - java
  - common
  - changeloglockcleaner

properties:
  autoscaler.api_server.cache_ttl:
    description: "The TTL of credential cache in seconds"
    default: 600
  autoscaler.api_server.require_consul:
    description: "whether to start consul agent"
    default: false
  autoscaler.api_server.port:
    description: "Port where APIServer will run"
    default: 6101
  autoscaler.api_server.publicPort:
    description: "Port where APIServer public api will run"
    default: 6106
  autoscaler.api_server.health.port:
    description: "the listening port of health endpoint"
    default: 6201
  autoscaler.api_server.cacheTTL:
    description: "TTL time in second to invalidate the credential cache"
    default: 900
  autoscaler.api_server.ca_cert:
    description: "PEM-encoded CA certificate"
  autoscaler.api_server.server_cert:
    description: "PEM-encoded server certificate"
  autoscaler.api_server.server_key:
    description: "PEM-encoded server key"
  autoscaler.api_server.public_ca_cert:
    description: "PEM-encoded CA certificate for public api"
    default: ""
  autoscaler.api_server.public_server_cert:
    description: "PEM-encoded server certificate for public api"
    default: ""
  autoscaler.api_server.public_server_key:
    description: "PEM-encoded server key for public api"
    default: ""
  autoscaler.api_server.http_client_timeout:
    description: "Http client imeout for apiserver to communicate with other autoscaler components, in milliseconds"
    default: 60000

  autoscaler.api_server.scheduler.host:
    description: "Host where scheduler is running"
    default: "autoscalerscheduler.service.cf.internal"
  autoscaler.api_server.scheduler.port:
    description: "Port where scheduler will listen"
    default: 6102
  autoscaler.api_server.scheduler.ca_cert:
    description: "PEM-encoded CA certificate"
  autoscaler.api_server.scheduler.client_cert:
    description: "PEM-encoded client certificate"
  autoscaler.api_server.scheduler.client_key:
    description: "PEM-encoded client key"
  

  autoscaler.api_server.scaling_engine.host:
    description: "Host where scalingengine is running"
    default: "scalingengine.service.cf.internal"
  autoscaler.api_server.scaling_engine.port:
    description: "Port where scalingengine will listen"
    default: 6104
  autoscaler.api_server.scaling_engine.ca_cert:
    description: "PEM-encoded CA certificate"
  autoscaler.api_server.scaling_engine.client_cert:
    description: "PEM-encoded client certificate"
  autoscaler.api_server.scaling_engine.client_key:
    description: "PEM-encoded client key"

  autoscaler.api_server.metrics_collector.host:
    description: "Host where metricsCollector is running"
    default: "metricscollector.service.cf.internal"
  autoscaler.api_server.metrics_collector.port:
    description: "Port where metricsCollector will listen"
    default: 6103
  autoscaler.api_server.metrics_collector.ca_cert:
    description: "PEM-encoded CA certificate"
  autoscaler.api_server.metrics_collector.client_cert:
    description: "PEM-encoded client certificate"
  autoscaler.api_server.metrics_collector.client_key:
    description: "PEM-encoded client key"

  autoscaler.api_server.eventgenerator.host:
    description: "Host where eventGenerator is running"
    default: "eventgenerator.service.cf.internal"
  autoscaler.api_server.eventgenerator.port:
    description: "Port where eventGenerator will listen"
    default: 6105
  autoscaler.api_server.eventgenerator.ca_cert:
    description: "PEM-encoded CA certificate"
  autoscaler.api_server.eventgenerator.client_cert:
    description: "PEM-encoded client certificate"
  autoscaler.api_server.eventgenerator.client_key:
    description: "PEM-encoded client key"    

  autoscaler.api_server.service_offering_enabled:
    description: "the offering approach of auto-scaler"
    default: true
    
  autoscaler.api_server.service_broker.host:
    description: "Host where serviceBroker is running"
    default: "servicebroker.service.cf.internal"
  autoscaler.api_server.service_broker.port:
    description: "Port where serviceBroker will listen"
    default: 6107
  autoscaler.api_server.service_broker.ca_cert:
    description: "PEM-encoded CA certificate"
  autoscaler.api_server.service_broker.client_cert:
    description: "PEM-encoded client certificate"
  autoscaler.api_server.service_broker.client_key:
    description: "PEM-encoded client key"

  autoscaler.api_server.info.name:
    description: "Name of the autoscaler application to be shown in /info path"
    default: "Autoscaler"
  autoscaler.api_server.info.build:
    description: "Autoscaler application build number"
    default: "2.0"
  autoscaler.api_server.info.support_url:
    description: "Autoscaler application support page URL"
    default: "https://github.com/cloudfoundry/app-autoscaler"
  autoscaler.api_server.info.description:
    description: "Autoscaler application short description"
    default: "Automatically increase or decrease the number of application instances based on a policy you define."

  autoscaler.api_server.db_config.max_connections:
    default: 10  
    description: "Maximum number of connections that may be held in the apiserver db pool"
  autoscaler.api_server.db_config.min_connections:
    default: 0   
    description: "Minimum number of connections that should be held in the apiserver db pool"
  autoscaler.api_server.db_config.idle_timeout:
    default: 60000
    description: "The idle timeout for connections (milliseconds)"
  autoscaler.policy_db.address:
    description: "IP address on which the policydb server will listen"
    default: "autoscalerpostgres.service.cf.internal"
  autoscaler.policy_db.databases:
    description: "The list of databases used in policydb database including name"
  autoscaler.policy_db.db_scheme:
    description: "Database scheme to be used to access policydb"
    default: postgres
  autoscaler.policy_db.port:
    description: "Port on which the policydb server will listen"
  autoscaler.policy_db.roles:
    description: "The list of database roles used in policydb database including name/password"
  autoscaler.policy_db.tls.ca:
    default: ''
    description: 'PEM-encoded ca certificate of tls database server'
  autoscaler.policy_db.sslmode:
    default: disable
    description: "sslmode to connect to postgres server"

  autoscaler.api_server.hooks.pre_start:
    description: "Script to run before starting api_server"
    default: ''
    example: |
      #!/bin/bash
      echo "Going to start api_server"
      echo "api_server data directory is ${DATA_DIR}"
      echo "api_server port is ${PORT}"
      echo "api_server directory is ${PACKAGE_DIR}"
  autoscaler.api_server.hooks.post_start:
    description: "Script to run after api_server has started"
    default: ''
  autoscaler.api_server.hooks.pre_stop:
    description: "Script to run before stopping api_server"
    default: ''
  autoscaler.api_server.hooks.post_stop:
    description: "Script to run after api_server has stopped"
    default: ''


  autoscaler.cf.api:
    description: "the Cloud Foundry API endpoint"
  autoscaler.cf.client_id:
    description: "the client id to log in cf"
  autoscaler.cf.secret:
    description: "the secret to log in cf"
  autoscaler.cf.skip_ssl_validation:
    description: "Flag to skip ssl validation to connect to CC and UAA"
    default: false
  autoscaler.changeloglock_timeout_seconds:
    default: 180 
    description: "Liquibase changelog lock timeout duration in seconds"

  autoscaler.cf.auth_endpoint:
    description: "the Cloud Foundry Auth endpoint"
  
  
  autoscaler_api_client_id:
    description: "Autoscaler Public API Client ID"
  autoscaler_api_verification_client_id:
    description: "Autoscaler Public API Verification Client ID"
  autoscaler_api_verification_client_secret:
    description: "Autoscaler Public API Verification Client Secret"


  sbss.sbss_db.address:
    description: "IP address on which the sbssdb server will listen"
    default: "postgres.service.cf.internal"
  sbss.sbss_db.databases:
    description: "The list of databases used in sbssdb database including name"
  sbss.sbss_db.db_scheme:
    description: "Database scheme to be used to access sbssdb"
  sbss.sbss_db.port:
    description: "Port on which the sbssdb server will listen"
  sbss.sbss_db.roles:
    description: "The list of database roles used in sbssdb database including name/password"
  
  sbss.restricted_dbuser_name:
    description: "Restricted db user username"
  sbss.restricted_dbuser_password:
    description: "Restricted db user password"


