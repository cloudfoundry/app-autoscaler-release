#!/bin/bash
<%
  # returns an empty array of the value is null
  def p_arr(property)
    p(property,nil) || []
  end

  role = p_arr('autoscaler.scheduler_db.roles').find { |role| role['tag'] == 'schedulerdb' or role['tag'] == 'default' }
  database = p_arr('autoscaler.scheduler_db.databases').find { |database| database['tag'] == 'schedulerdb' or database['tag'] == 'default' }
%>
source /var/vcap/packages/common/dns-helper.sh

DB_DIR=/var/vcap/packages/db
SCHEDULER_DIR=/var/vcap/packages/scheduler

export PATH=/var/vcap/packages/java/bin:$PATH 

require_consul='<%= p("autoscaler.scheduler.require_consul") %>'

if [ $require_consul = 'true' ];then
	echo "start consul agent"
	# Starting consul agent on pre-start so that we can connect to a database url provided by consul dns
  source /var/vcap/packages/common/consul-helper.sh
  start_consul_agent
else
	echo "consul agent is not needed"
fi

# Getting Database config
HOST='<%= p("autoscaler.scheduler_db.address") %>'
DBNAME='<%= database['name'] %>'
USER='<%= role['name'] %>'
PASSWORD='<%= role['password'] %>'
PORT='<%= p("autoscaler.scheduler_db.port") %>'
SSLMODE='<%= p("autoscaler.scheduler_db.sslmode") %>'
DBURI="jdbc:postgresql://$HOST:$PORT/$DBNAME?sslmode=$SSLMODE"

<% unless p('autoscaler.scheduler_db.tls.ca') == "" %>
DBURI=$DBURI"&sslrootcert=/var/vcap/jobs/scheduler/config/certs/scheduler_db/ca.crt"
<% end %>

detect_dns $HOST $PORT

java -cp "$DB_DIR/target/lib/*" liquibase.integration.commandline.Main --url "$DBURI" --username=$USER --password=$PASSWORD \
--driver=org.postgresql.Driver --changeLogFile=$SCHEDULER_DIR/db/scheduler.changelog-master.yaml update

java -cp "$DB_DIR/target/lib/*" liquibase.integration.commandline.Main --url "$DBURI" --username=$USER --password=$PASSWORD \
--driver=org.postgresql.Driver --changeLogFile=$SCHEDULER_DIR/db/quartz.changelog-master.yaml update

# Generate key store for the clients communicate with scheduler.
/var/vcap/jobs/scheduler/bin/install_crt_keystore scheduler server.crt server.key scheduler/server.p12
/var/vcap/jobs/scheduler/bin/install_crt_keystore scalingengine scalingengine/client.crt scalingengine/client.key scalingengine/client.p12

# Generate trust stores.
/var/vcap/jobs/scheduler/bin/install_crt_truststore scheduler ca.crt
/var/vcap/jobs/scheduler/bin/install_crt_truststore scalingengine scalingengine/ca.crt
