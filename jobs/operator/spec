---
name: operator
templates:
  operator_ctl: bin/operator_ctl
  operator.yml.erb: config/operator.yml
  pre-start.erb: bin/pre-start
  scalingengine_ca.crt.erb: config/certs/scalingengine/ca.crt
  scalingengine_client.crt.erb: config/certs/scalingengine/client.crt
  scalingengine_client.key.erb: config/certs/scalingengine/client.key
  scheduler_ca.crt.erb: config/certs/scheduler/ca.crt
  scheduler_client.crt.erb: config/certs/scheduler/client.crt
  scheduler_client.key.erb: config/certs/scheduler/client.key
  policy_db_ca.crt.erb: config/certs/policy_db/ca.crt
  appmetrics_db_ca.crt.erb: config/certs/appmetrics_db/ca.crt
  appinstancemetrics_db_ca.crt.erb: config/certs/appinstancemetrics_db/ca.crt
  lock_db_ca.crt.erb: config/certs/lock_db/ca.crt
  scalingengine_db_ca.crt.erb: config/certs/scalingengine_db/ca.crt
  hooks/pre-start.sh.erb: bin/hooks/pre-start.sh
  hooks/pre-stop.sh.erb: bin/hooks/pre-stop.sh
  hooks/post-start.sh.erb: bin/hooks/post-start.sh
  hooks/post-stop.sh.erb: bin/hooks/post-stop.sh
  
packages:
  - operator
  - common
  - db
  - java

properties:
  autoscaler.cf.api:
    description: "the Cloud Foundry API endpoint"
  autoscaler.cf.grant_type:
    description: "the grant type to log in cf" 
  autoscaler.cf.client_id:
    description: "the client id to log in cf"
  autoscaler.cf.secret:
    description: "the secret to log in cf"
  autoscaler.cf.skip_ssl_validation:
    description: "Flag to skip ssl validation to connect to CC and UAA"
    default: false

  autoscaler.policy_db.address:
    description: "IP address on which the policydb server will listen"
    default: "autoscalerpostgres.service.cf.internal"
  autoscaler.policy_db.databases:
    description: "The list of databases used in policydb database including name"
  autoscaler.policy_db.db_scheme:
    description: "Database scheme to be used to access policydb"
    default: postgres    
  autoscaler.policy_db.port:
    description: "Port on which the policydb server will listen"
  autoscaler.policy_db.roles:
    description: "The list of database roles used in policydb database including name/password"
  autoscaler.policy_db.tls.ca:
    default: ''
    description: 'PEM-encoded ca certificate of tls database server'
  autoscaler.policy_db.sslmode:
    default: disable
    description: "sslmode to connect to postgres server"


  autoscaler.instancemetrics_db.address:
    description: "IP address on which the instancemetricsdb server will listen"
    default: "autoscalerpostgres.service.cf.internal"
  autoscaler.instancemetrics_db.databases:
    description: "The list of databases used in instancemetricsdb database including name"
  autoscaler.instancemetrics_db.db_scheme:
    description: "Database scheme to be used to access instancemetricsdb"
    default: postgres    
  autoscaler.instancemetrics_db.port:
    description: "Port on which the instancemetricsdb server will listen"
  autoscaler.instancemetrics_db.roles:
    description: "The list of database roles used in instancemetricsdb database including name/password"
  autoscaler.instancemetrics_db.tls.ca:
    default: ''
    description: 'PEM-encoded ca certificate of tls database server'
  autoscaler.instancemetrics_db.sslmode:
    default: disable
    description: "sslmode to connect to postgres server"

  autoscaler.appmetrics_db.address:
    description: "IP address on which the appmetricsdb server will listen"
    default: "autoscalerpostgres.service.cf.internal"
  autoscaler.appmetrics_db.databases:
    description: "The list of databases used in appmetricsdb database including name"
  autoscaler.appmetrics_db.db_scheme:
    description: "Database scheme to be used to access appmetricsdb"
    default: postgres    
  autoscaler.appmetrics_db.port:
    description: "Port on which the appmetricsdb server will listen"
  autoscaler.appmetrics_db.roles:
    description: "The list of database roles used in appmetricsdb database including name/password"
  autoscaler.appmetrics_db.tls.ca:
    default: ''
    description: 'PEM-encoded ca certificate of tls database server'
  autoscaler.appmetrics_db.sslmode:
    default: disable
    description: "sslmode to connect to postgres server"

  autoscaler.scalingengine_db.address:
    description: "IP address on which the scalingenginedb server will listen"
    default: "autoscalerpostgres.service.cf.internal"
  autoscaler.scalingengine_db.databases:
    description: "The list of databases used in scalingenginedb database including name"
  autoscaler.scalingengine_db.db_scheme:
    description: "Database scheme to be used to access scalingenginedb"
    default: postgres    
  autoscaler.scalingengine_db.port:
    description: "Port on which the scalingenginedb server will listen"
  autoscaler.scalingengine_db.roles:
    description: "The list of database roles used in scalingenginedb database including name/password"
  autoscaler.scalingengine_db.tls.ca:
    default: ''
    description: 'PEM-encoded ca certificate of tls database server'
  autoscaler.scalingengine_db.sslmode:
    default: disable
    description: "sslmode to connect to postgres server"

  autoscaler.policy_db_connection_config.max_open_connections:
    default: 100
  autoscaler.policy_db_connection_config.max_idle_connections:
    default: 10
  autoscaler.policy_db_connection_config.connection_max_lifetime:
    default: 60s


  autoscaler.appmetrics_db_connection_config.max_open_connections:
    default: 100
  autoscaler.appmetrics_db_connection_config.max_idle_connections:
    default: 10
  autoscaler.appmetrics_db_connection_config.connection_max_lifetime:
    default: 60s

  autoscaler.instancemetrics_db_connection_config.max_open_connections:
    default: 100
  autoscaler.instancemetrics_db_connection_config.max_idle_connections:
    default: 10
  autoscaler.instancemetrics_db_connection_config.connection_max_lifetime:
    default: 60s

  autoscaler.scalingengine_db_connection_config.max_open_connections:
    default: 100
  autoscaler.scalingengine_db_connection_config.max_idle_connections:
    default: 10
  autoscaler.scalingengine_db_connection_config.connection_max_lifetime:
    default: 60s

  autoscaler.operator.require_consul:
    description: "whether to start consul agent"
    default: false
  autoscaler.operator.logging.level:
     description: "the leve of logging"
     default: "info"
  autoscaler.operator.http_client_timeout:
    description: "Http client imeout for operator to communicate with other autoscaler components"
    default: 60s
  autoscaler.operator.app_sync_interval: 
    description: "the time interval to sync applications"
    default: 24h
  
  autoscaler.operator.instance_metrics_db.refresh_interval:
    description: "the time interval to prune the instancemetrics database"
    default: 1h
  autoscaler.operator.instance_metrics_db.cutoff_duration:
    description: "the cutoff days when pruning instancemetrics database"
    default: 24h
     
  autoscaler.operator.app_metrics_db.refresh_interval:
    description: "the time interval to prune the appmetrics database"
    default: 1h
  autoscaler.operator.app_metrics_db.cutoff_duration:
    description: "the cutoff days when pruning appmetrics database"
    default: 48h

  autoscaler.operator.scaling_engine_db.refresh_interval:
    description: "the time interval to prune the scalingengine database"
    default: 1h
  autoscaler.operator.scaling_engine_db.cutoff_duration:
    description: "the cutoff days when pruning scalingengine database"
    default: 240h

  autoscaler.operator.scaling_engine.host:
    description: "Host where the scaling engine is running"
    default: "scalingengine.service.cf.internal"

  autoscaler.operator.scaling_engine.port:
    description: "Port where the scaling engine will listen"
    default: 6104

  autoscaler.operator.scaling_engine.ca_cert:
    description: "PEM-encoded CA certificate"

  autoscaler.operator.scaling_engine.client_cert:
    description: "PEM-encoded client certificate"

  autoscaler.operator.scaling_engine.client_key:
    description: "PEM-encoded client key"

  autoscaler.operator.scaling_engine.sync_interval:
    description: "the time interval to synchronize the scaling engine active schedules"
    default: 600s

  autoscaler.operator.scheduler.host:
    description: "Host where the scheduler is running"
    default: "autoscalerscheduler.service.cf.internal"

  autoscaler.operator.scheduler.port:
    description: "Port where the scheduler will listen"
    default: 6102

  autoscaler.operator.scheduler.ca_cert:
    description: "PEM-encoded CA certificate"

  autoscaler.operator.scheduler.client_cert:
    description: "PEM-encoded client certificate"

  autoscaler.operator.scheduler.client_key:
    description: "PEM-encoded client key"

  autoscaler.operator.scheduler.sync_interval:
    description: "the time interval to synchronize the schedules"
    default: 600s
  
  autoscaler.lock_db.address:
    description: "IP address on which the lockdb server will listen"
    default: "autoscalerpostgres.service.cf.internal"
  autoscaler.lock_db.databases:
    description: "The list of databases used in lockdb database including name"
  autoscaler.lock_db.db_scheme:
    description: "Database scheme to be used to access lockdb"
    default: postgres    
  autoscaler.lock_db.port:
    description: "Port on which the lockdb server will listen"
  autoscaler.lock_db.roles:
    description: "The list of database roles used in lockdb database including name/password"
  autoscaler.lock_db.tls.ca:
    default: ''
    description: 'PEM-encoded ca certificate of tls database server'
  autoscaler.lock_db.sslmode:
    default: disable
    description: "sslmode to connect to postgres server"

  autoscaler.lock_db_connection_config.max_open_connections:
    default: 10
  autoscaler.lock_db_connection_config.max_idle_connections:
    default: 1
  autoscaler.lock_db_connection_config.connection_max_lifetime:
    default: 60s

  autoscaler.operator.db_lock.ttl:
    description: "database lock ttl"
    default: 15s

  autoscaler.operator.db_lock.retry_interval:
    description: "lock db retry interval"
    default: 5s 

  autoscaler.operator.health.port:
    description: "the listening port of health endpoint"
    default: 6208

  autoscaler.operator.hooks.pre_start:
    description: "Script to run before starting operator"
    default: ''
    example: |
      #!/bin/bash
      echo "Going to start operator"
      echo "operator data directory is ${DATA_DIR}"
      echo "operator port is ${PORT}"
      echo "operator directory is ${PACKAGE_DIR}"
  autoscaler.operator.hooks.post_start:
    description: "Script to run after operator has started"
    default: ''
  autoscaler.operator.hooks.pre_stop:
    description: "Script to run before stopping operator"
    default: ''
  autoscaler.operator.hooks.post_stop:
    description: "Script to run after operator has stopped"
    default: ''    