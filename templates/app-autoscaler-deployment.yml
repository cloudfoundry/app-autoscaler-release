---

name: app-autoscaler

# Release Details
releases:
- name: app-autoscaler
  version: latest
- name: postgres
  url: https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=17
  version: '17'
  sha1: b062e32a5409ccd4e4161337c48705c793a58412
- name: consul
  version: latest
- name: routing
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/cf-routing-release?v=0.162.0
  sha1: f17cf09d2414f5f486d18bbd57b17fd48fb69773
  version: '0.162.0'

# Stemcell details
stemcells:
- alias: default
  os: ubuntu-trusty
  version: latest

# Canary details
update:
  canaries: 1
  canary_watch_time: 1000-300000
  max_in_flight: 3
  update_watch_time: 1000-300000

# Instance Group details
instance_groups:
  # Postgres Instance Group
- name: postgres_autoscaler
  azs:
  - z1
  instances: 1
  update:
    serial: true
  stemcell: default
  vm_type: small
  networks:
  - name: default
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            postgres:
              check:
                tcp: 127.0.0.1:5432
                interval: 30s
                timeout: 10s
  - name: postgres
    release: postgres
    properties:
      databases: &database
        databases:
        - name: autoscaler
          tag: default
        db_scheme: postgres
        port: 5432
        roles:
        - name: postgres
          password: "((database_password))"
          tag: default
        connection_config: &databaseConnectionConfig
          max_open_connections: 100
          max_idle_connections: 10
          connection_max_lifetime: 60s

# APIServer Instance Group
- name: apiserver
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            apiserver: {}
  - name: apiserver
    release: app-autoscaler
    properties:
      api_server:
        db_config: &db_config
          idle_timeout: 1000
          max_connections: 10
          min_connections: 0
        port: 6100
        publicPort: &apiServerPublicPort 6106
        ca_cert: ((apiserver_ca.ca))
        server_cert: ((apiserver_server.certificate))
        server_key:  ((apiserver_server.private_key))
        public_ca_cert: ((apiserver_public_ca.ca))
        public_server_cert: ((apiserver_public_server.certificate))
        public_server_key:  ((apiserver_public_server.private_key))
        scheduler:
          ca_cert: ((scheduler_ca.ca))
          client_cert: ((scheduler_client.certificate))
          client_key: ((scheduler_client.private_key))
        scaling_engine:
          ca_cert: ((scalingengine_ca.ca))
          client_cert: ((scalingengine_client.certificate))
          client_key: ((scalingengine_client.private_key))
        metrics_collector:
          ca_cert: ((metricscollector_ca.ca))
          client_cert: ((metricscollector_client.certificate))
          client_key: ((metricscollector_client.private_key))
        service_broker:
          ca_cert: ((servicebroker_ca.ca))
          client_cert: ((servicebroker_client.certificate))
          client_key: ((servicebroker_client.private_key))
      policy_db: *database
      cf:
        api: "https://api.((system_domain))"
        skip_ssl_validation: "((skip_ssl_validation))"
        auth_endpoint: "https://login.((system_domain))"
      autoscaler_api_client_id: autoscaler_id
      autoscaler_api_verification_client_id: autoscaler_verification_id
      autoscaler_api_verification_client_secret: autoscaler_verification_secret
  - name: route_registrar
    release: routing
    consumes:
      nats: {from: nats, deployment: cf}
    properties:
      route_registrar:
        routes:
        - name: api_server_public_api
          registration_interval: 20s
          port: *apiServerPublicPort
          tags:
            component: api_server
          uris:
            - autoscaler.((system_domain))
      
# Scheduler Instance Group
- name: scheduler_autoscaler
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: small-highmem
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            autoscalerscheduler: 
              check:
                tcp: 127.0.0.1:6102
                interval: 30s
                timeout: 10s
  - name: scheduler
    release: app-autoscaler
    properties:
      scheduler:
        port: 6102
        job_reschedule_interval_millisecond: 10000
        job_reschedule_maxcount: 6
        notification_reschedule_maxcount: 3
        ca_cert: ((scheduler_ca.ca))
        server_cert: ((scheduler_server.certificate))
        server_key: ((scheduler_server.private_key))
        scaling_engine:
          ca_cert: ((scalingengine_ca.ca))
          client_cert: ((scalingengine_client.certificate))
          client_key: ((scalingengine_client.private_key))
      scheduler_db: *database
      policy_db: *database
      
# Service-Broker Instance Group
- name: servicebroker
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            servicebroker: {}
  - name: servicebroker
    release: app-autoscaler
    properties:
      service_broker: 
        db_config: *db_config
        publicPort : &servicebrokerPort 6101
        port: 6107
        ca_cert: ((servicebroker_ca.ca))
        server_cert: ((servicebroker_server.certificate))
        server_key: ((servicebroker_server.private_key))
        public_ca_cert: ((servicebroker_public_ca.ca))
        public_server_cert: ((servicebroker_public_server.certificate))
        public_server_key: ((servicebroker_public_server.private_key))
        username: username
        password: password
        http_request_timeout: 5000
        dashboard_redirect_uri: ""
        catalog: 
          services:
          - id: autoscaler-guid
            name: autoscaler
            description: Automatically increase or decrease the number of application instances based on a policy you define.
            bindable: true
            plans:
            - id: autoscaler-free-plan-id
              name: autoscaler-free-plan
              description: This is the free service plan for the Auto-Scaling service.
              schemas:
                service_binding:
                  create:
                    parameters:
                      "$schema": http://json-schema.org/draft-06/schema#
                      description: schema for autoscaler policy
                      type: object
                      properties:
                        instance_min_count:
                          type: integer
                          minimum: 1
                          description: Minimum number of application instance always runs
                        instance_max_count:
                          type: integer
                          minimum: 1
                          description: Maximum how many instances of application can be provisioned as part of application scaling
                        scaling_rules:
                          type: array
                          items:
                            "$ref": "#/definitions/scaling_rules"
                        schedules:
                            "$ref": "#/definitions/schedules"
                      required:
                        - instance_min_count
                        - instance_max_count
                      anyOf:
                        - required:
                          - scaling_rules
                        - required:
                          - schedules
                      definitions:
                          scaling_rules:
                            type: object
                            properties:
                              metric_type:
                                type: string
                                enum:
                                  - memoryused
                                  - memoryutil
                                  - responsetime
                                  - throughput
                              stat_window_secs:
                                type: number
                                minimum: 60
                                maximum: 3600
                                description: Interval to aggregate metrics statictics in seconds
                              breach_duration_secs:
                                type: number
                                minimum: 60
                                maximum: 3600
                                description: The length of the past period when a scaling action might be triggered based on metric usage
                              threshold:
                                type: number
                              operator:
                                type: string
                                enum:
                                  - "<"
                                  - ">"
                                  - "<="
                                  - ">="
                              cool_down_secs:
                                type: number
                                minimum: 60
                                maximum: 3600
                                description: The interval between two successive scaling activity
                              adjustment:
                                type: string
                                pattern: "^[-+][1-9]+[0-9]*$"
                                description: Magnitude of scaling in each step, +1 means scale up 1 Instance -2 means scale down 2 instances
                            required:
                              - metric_type
                              - threshold
                              - operator
                              - adjustment
                          recurring_schedule:
                            type: object
                            properties:
                              start_date:
                                description: Start date of the recurrence in YYYY-MM-DD format
                                oneOf:
                                  - type: string
                                    pattern: "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$"
                                  - type: string
                                    enum:
                                      - ''
                              start_time:
                                type: string
                                pattern: "^(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$"
                                description: Start time of the recurrence in 24 hour format
                              end_date:
                                description: End date of the recurrence in YYYY-MM-DD format
                                oneOf:
                                  - type: string
                                    pattern: "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$"
                                  - type: string
                                    enum:
                                      - ''
                              end_time:
                                type: string
                                pattern: "^(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$"
                                description: End time of the recurrence in 24 hour format
                              instance_min_count:
                                type: integer
                                minimum: 1
                                description: The number of instances to scale down to once recurrence period
                              instance_max_count:
                                type: integer
                                minimum: 1
                                description: Maximum number of instances to scale up during recurrence period
                              initial_min_instance_count:
                                type: integer
                                minimum: 1
                                description: The number of instances to scale up to as soon as the recurrence period starts
                              days_of_week:
                                type: array
                                description: The list of the days of the week when to trigger scaling. Values ranging from 1 to 7
                                uniqueItems: true
                                minItems: 1
                                items:
                                  type: number
                                  enum:
                                    - 1
                                    - 2
                                    - 3
                                    - 4
                                    - 5
                                    - 6
                                    - 7
                              days_of_month:
                                type: array
                                uniqueItems: true
                                minItems: 1
                                description: The list of the days of the month when to trigger scaling. Values ranging from 1 to 31
                                items:
                                  type: number
                                  enum:
                                    - 1
                                    - 2
                                    - 3
                                    - 4
                                    - 5
                                    - 6
                                    - 7
                                    - 8
                                    - 9
                                    - 10
                                    - 11
                                    - 12
                                    - 13
                                    - 14
                                    - 15
                                    - 16
                                    - 17
                                    - 18
                                    - 19
                                    - 20
                                    - 21
                                    - 22
                                    - 23
                                    - 24
                                    - 25
                                    - 26
                                    - 27
                                    - 28
                                    - 29
                                    - 30
                                    - 31
                            required:
                              - start_time
                              - end_time
                              - instance_min_count
                              - instance_max_count
                            oneOf:
                              - required:
                                - days_of_week
                              - required:
                                - days_of_month
                          specific_date:
                            type: object
                            properties:
                              start_date_time:
                                type: string
                                pattern: "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$"
                                description: Start date and time to scale in YYYY-MM-DDTHH:MM format
                              end_date_time:
                                type: string
                                pattern: "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$"
                                description: End date and time to scale in YYYY-MM-DDTHH:MM format
                              instance_min_count:
                                type: integer
                                minimum: 1
                                description: The number of instances to scale down to once recurrence period
                              instance_max_count:
                                type: integer
                                minimum: 1
                                description: Maximum number of instances to scale up during recurrence period
                              initial_min_instance_count:
                                type: integer
                                minimum: 1
                                description: The number of instances to scale up to as soon as the recurrence period starts
                            required:
                              - start_date_time
                              - end_date_time
                              - instance_min_count
                              - instance_max_count
                          schedules:
                            type: object
                            properties:
                              timezone:
                                type: string
                              recurring_schedule:
                                type: array
                                items:
                                  "$ref": "#/definitions/recurring_schedule"
                                minItems: 1
                              specific_date:
                                type: array
                                items:
                                  "$ref": "#/definitions/specific_date"
                                minItems: 1
                            required:
                              - timezone
                            anyOf:
                              - required:
                                - specific_date
                              - required:
                                - recurring_schedule
        api_server:
          ca_cert: ((apiserver_ca.ca))
          client_cert: ((apiserver_client.certificate))
          client_key: ((apiserver_client.private_key))
      binding_db: *database
  - name: route_registrar
    release: routing
    consumes:
      nats: {from: nats, deployment: cf}
    properties:
      route_registrar:
        routes:
        - name: autoscaler_service_broker
          registration_interval: 20s
          port: *servicebrokerPort
          tags:
            component: autoscaler_service_broker
          uris:
            - autoscalerservicebroker.((system_domain))

# Pruner Instance Group
- name: pruner
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            pruner: 
              check: {}
  - name: pruner
    release: app-autoscaler
    properties:
      appmetrics_db: *database
      instancemetrics_db: *database
      scalingengine_db: *database
      appmetrics_db_connection_config: *databaseConnectionConfig
      instancemetrics_db_connection_config: *databaseConnectionConfig
      scalingengine_db_connection_config: *databaseConnectionConfig
      lock_db: *database
      pruner:
        db_lock: 
          ttl: 15s
          retry_interval: 5s
        enable_db_lock: false
        logging:
          level: debug 

# Metric-collector Instance Group
- name: metricscollector
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: small
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            metricscollector:
              check:
                tcp: 127.0.0.1:6103
                interval: 30s
                timeout: 10s
  - name: metricscollector
    release: app-autoscaler
    properties:
      instancemetrics_db: *database
      policy_db: *database
      lock_db: *database
      instancemetrics_db_connection_config: *databaseConnectionConfig
      policy_db_connection_config: *databaseConnectionConfig
      lock_db_connection_config: *databaseConnectionConfig
      cf: &cf_credentials
        api: "https://api.((system_domain))"
        grant_type: password
        username: admin
        password: "((cf_admin_password))"
        client_id: ""
        secret: ""
        skip_ssl_validation: "((skip_ssl_validation))"
      metricscollector:
        logging:
          level: debug
        server:
          port: &metricsCollectorPort 6103
        collector:
          refresh_interval: 60s
          collect_interval: 30s
          save_interval: 5s
        enable_db_lock: false
        ca_cert: ((metricscollector_ca.ca))
        server_cert: ((metricscollector_server.certificate))
        server_key: ((metricscollector_server.private_key))

# Event-Generator Instance Group
- name: eventgenerator
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: small
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            eventgenerator: 
              check: {}
  - name: eventgenerator
    release: app-autoscaler
    properties:
      appmetrics_db: *database
      policy_db: *database
      lock_db: *database
      appmetrics_db_connection_config: *databaseConnectionConfig
      policy_db_connection_config: *databaseConnectionConfig
      lock_db_connection_config: *databaseConnectionConfig
      eventgenerator:
        logging:
          level: debug
        aggregator:
          aggregator_execute_interval: 40s
          policy_poller_interval: 40s
          metric_poller_count: 20
          app_monitor_channel_size: 200
          save_interval: 5s
          app_metric_channel_size: 1000
        evaluator:
          evaluation_manager_execute_interval: 40s
          evaluator_count: 20
          trigger_array_channel_size: 200
        defaultStatWindowSecs: 300
        defaultBreachDurationSecs: 300
        circuitBreaker:
          back_off_initial_interval: 5m
          back_off_max_interval: 120m
          consecutive_failure_count: 5
        enable_db_lock: false
        scaling_engine:
          host: scalingengine.service.cf.internal
          port: *scalingEnginePort
          ca_cert: ((scalingengine_ca.ca))
          client_cert: ((scalingengine_client.certificate))
          client_key: ((scalingengine_client.private_key))
        metricscollector:
          host: metricscollector.service.cf.internal
          port: *metricsCollectorPort
          ca_cert: ((metricscollector_ca.ca))
          client_cert: ((metricscollector_client.certificate))
          client_key: ((metricscollector_client.private_key))

# Scaling-Engine Instance Group
- name: scalingengine
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            scalingengine: 
              check:
                tcp: 127.0.0.1:6104
                interval: 30s
                timeout: 10s
  - name: scalingengine
    release: app-autoscaler
    properties:
      scalingengine_db: *database
      scheduler_db: *database
      policy_db: *database
      scalingengine_db_connection_config: *databaseConnectionConfig
      scheduler_db_connection_config: *databaseConnectionConfig
      policy_db_connection_config: *databaseConnectionConfig
      cf: *cf_credentials
      scalingengine:
        logging:
          level: debug
        server:
          port: &scalingEnginePort 6104
        defaultCoolDownSecs: 300
        lockSize: 32
        ca_cert: ((scalingengine_ca.ca))
        server_cert: ((scalingengine_server.certificate))
        server_key: ((scalingengine_server.private_key))
        consul:
          cluster: http://127.0.0.1:8500

variables:
- name: database_password
  type: password
- name: scalingengine_ca
  type: certificate
  options:
    is_ca: true
    common_name: scalingengineCA
- name: scalingengine_server
  type: certificate
  options:
    ca: scalingengine_ca
    common_name: scalingengine.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: scalingengine_client
  type: certificate
  options:
    ca: scalingengine_ca
    common_name: scalingengine client
    extended_key_usage:
    - client_auth
- name: metricscollector_ca
  type: certificate
  options:
    is_ca: true
    common_name: metricscollectorCA
- name: metricscollector_server
  type: certificate
  options:
    ca: metricscollector_ca
    common_name: metricscollector.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: metricscollector_client
  type: certificate
  options:
    ca: metricscollector_ca
    common_name: metricscollector client
    extended_key_usage:
    - client_auth
- name: apiserver_ca
  type: certificate
  options:
    is_ca: true
    common_name: apiserverCA
- name: apiserver_server
  type: certificate
  options:
    ca: apiserver_ca
    common_name: apiserver.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: apiserver_public_ca
  type: certificate
  options:
    is_ca: true
    common_name: apiserverpublicCA
- name: apiserver_public_server
  type: certificate
  options:
    ca: apiserver_public_ca
    common_name: autoscaler.((system_domain))
    extended_key_usage:
    - client_auth
    - server_auth
- name: apiserver_client
  type: certificate
  options:
    ca: apiserver_ca
    common_name: apiserver client
    extended_key_usage:
    - client_auth
- name: servicebroker_ca
  type: certificate
  options:
    is_ca: true
    common_name: servicebrokerCA
- name: servicebroker_server
  type: certificate
  options:
    ca: servicebroker_ca
    common_name: servicebroker.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: servicebroker_client
  type: certificate
  options:
    ca: servicebroker_ca
    common_name: servicebroker client
    extended_key_usage:
    - client_auth
- name: servicebroker_public_ca
  type: certificate
  options:
    is_ca: true
    common_name: servicebrokerCA
- name: servicebroker_public_server
  type: certificate
  options:
    ca: servicebroker_public_ca
    common_name: autoscalerservicebroker.((system_domain))
    extended_key_usage:
    - client_auth
    - server_auth
- name: scheduler_ca
  type: certificate
  options:
    is_ca: true
    common_name: schedulerCA
- name: scheduler_server
  type: certificate
  options:
    ca: scheduler_ca
    common_name: autoscalerscheduler.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: scheduler_client
  type: certificate
  options:
    ca: scheduler_ca
    common_name: scheduler client
    extended_key_usage:
    - client_auth
