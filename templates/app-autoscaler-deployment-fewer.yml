---

name: app-autoscaler

# Release Details
releases:
- name: app-autoscaler
  version: latest
- name: postgres
  url: https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=17
  version: '17'
  sha1: b062e32a5409ccd4e4161337c48705c793a58412
- name: consul
  version: latest
- name: routing
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/cf-routing-release?v=0.162.0
  sha1: f17cf09d2414f5f486d18bbd57b17fd48fb69773
  version: '0.162.0'

# Stemcell details
stemcells:
- alias: default
  os: ubuntu-xenial
  version: latest

# Canary details
update:
  canaries: 1
  canary_watch_time: 1000-300000
  max_in_flight: 1
  update_watch_time: 1000-300000

# Instance Group details
instance_groups:
  # Postgres Instance Group
- name: postgres_autoscaler
  azs:
  - z1
  instances: 1
  update:
    serial: true
  stemcell: default
  vm_type: small
  networks:
  - name: default
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            postgres:
              check:
                tcp: 127.0.0.1:5432
                interval: 30s
                timeout: 10s
  - name: postgres
    release: postgres
    properties:
      databases: &database
        databases:
        - name: autoscaler
          tag: default
        db_scheme: postgres
        port: 5432
        roles:
        - name: postgres
          password: "((database_password))"
          tag: default
        connection_config: &databaseConnectionConfig
          max_open_connections: 100
          max_idle_connections: 10
          connection_max_lifetime: 60s

# asactors Instance Group: scalingengine&scheduler&operator
- name: asactors
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
  update:
    max_in_flight: 1
    serial: true
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            scalingengine: 
              check:
                tcp: 127.0.0.1:6104
                interval: 30s
                timeout: 10s
            autoscalerscheduler: 
              check:
                tcp: 127.0.0.1:6102
                interval: 30s
                timeout: 10s
            operator: 
              check: {}
  - name: scalingengine
    release: app-autoscaler
    properties:
      autoscaler:
        scalingengine_db: *database
        scheduler_db: *database
        policy_db: *database
        scalingengine_db_connection_config: *databaseConnectionConfig
        scheduler_db_connection_config: *databaseConnectionConfig
        policy_db_connection_config: *databaseConnectionConfig
        cf: &cf_credentials
          api: "https://api.((system_domain))"
          grant_type: client_credentials
          client_id: "((cf_client_id))"
          secret: "((cf_client_secret))"
          skip_ssl_validation: "((skip_ssl_validation))"
        scalingengine:
          logging:
            level: debug
          http_client_timeout: 60s
          server:
            port: &scalingEnginePort 6104
          health:
            port: &scalingEngineHealthPort 6204
          defaultCoolDownSecs: 300
          lockSize: 32
          ca_cert: ((scalingengine_ca.ca))
          server_cert: ((scalingengine_server.certificate))
          server_key: ((scalingengine_server.private_key))
          require_consul: true
  - name: scheduler
    release: app-autoscaler
    properties:
      autoscaler:
        scheduler:
          port: &schedulerPort 6102
          health:
            port: &schedulerHealthPort 6202
          http_client_timeout: 60
          job_reschedule_interval_millisecond: 10000
          job_reschedule_maxcount: 6
          notification_reschedule_maxcount: 3
          ca_cert: ((scheduler_ca.ca))
          server_cert: ((scheduler_server.certificate))
          server_key: ((scheduler_server.private_key))
          scaling_engine:
            ca_cert: ((scalingengine_ca.ca))
            client_cert: ((scalingengine_client.certificate))
            client_key: ((scalingengine_client.private_key))
          require_consul: false
        scheduler_db: *database
        policy_db: *database
  - name: operator
    release: app-autoscaler
    properties:
      autoscaler:
        cf: *cf_credentials
        policy_db: *database
        appmetrics_db: *database
        instancemetrics_db: *database
        scalingengine_db: *database
        policy_db_connection_config: *databaseConnectionConfig
        appmetrics_db_connection_config: *databaseConnectionConfig
        instancemetrics_db_connection_config: *databaseConnectionConfig
        scalingengine_db_connection_config: *databaseConnectionConfig
        lock_db: *database
        operator:
          app_sync_interval: 24h
          scaling_engine:
            port: *scalingEnginePort
            ca_cert: ((scalingengine_ca.ca))
            client_cert: ((scalingengine_client.certificate))
            client_key: ((scalingengine_client.private_key))                
          scheduler:
            port: *schedulerPort
            ca_cert: ((scheduler_ca.ca))
            client_cert: ((scheduler_client.certificate))
            client_key: ((scheduler_client.private_key))        
          db_lock: 
            ttl: 15s
            retry_interval: 5s
          enable_db_lock: false
          logging:
            level: debug 
          http_client_timeout: 60s
          health:
            port: &operatorHealthPort 6208
          require_consul: false

# asapi Instance Group : apiserver&servicebroker
- name: asapi
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: minimal
  update:
    max_in_flight: 1
    serial: true
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            apiserver: {}
            servicebroker: {}
  - name: apiserver
    release: app-autoscaler
    properties:
      autoscaler:
        api_server:
          cache_ttl: 600
          http_client_timeout: 60000
          service_offering_enabled: true
          db_config: &db_config
            idle_timeout: 1000
            max_connections: 10
            min_connections: 0
          port: 6100
          publicPort: &apiServerPublicPort 6106
          ca_cert: ((apiserver_ca.ca))
          server_cert: ((apiserver_server.certificate))
          server_key:  ((apiserver_server.private_key))
          scheduler:
            ca_cert: ((scheduler_ca.ca))
            client_cert: ((scheduler_client.certificate))
            client_key: ((scheduler_client.private_key))
          scaling_engine:
            ca_cert: ((scalingengine_ca.ca))
            client_cert: ((scalingengine_client.certificate))
            client_key: ((scalingengine_client.private_key))
          metrics_collector:
            ca_cert: ((metricscollector_ca.ca))
            client_cert: ((metricscollector_client.certificate))
            client_key: ((metricscollector_client.private_key))
          eventgenerator:
            ca_cert: ((eventgenerator_ca.ca))
            client_cert: ((eventgenerator_client.certificate))
            client_key: ((eventgenerator_client.private_key))               
          service_broker:
            ca_cert: ((servicebroker_ca.ca))
            client_cert: ((servicebroker_client.certificate))
            client_key: ((servicebroker_client.private_key))
          require_consul: true
        policy_db: *database
        cf: *cf_credentials
  - name: servicebroker
    release: app-autoscaler
    properties:
      autoscaler:
        service_broker: 
          enable_custom_metrics: true
          db_config: *db_config
          publicPort : &servicebrokerPort 6101
          port: 6107
          ca_cert: ((servicebroker_ca.ca))
          server_cert: ((servicebroker_server.certificate))
          server_key: ((servicebroker_server.private_key))
          public_ca_cert: ((servicebroker_public_ca.ca))
          public_server_cert: ((servicebroker_public_server.certificate))
          public_server_key: ((servicebroker_public_server.private_key))
          username: autoscaler_service_broker_user
          password: ((autoscaler_service_broker_password))
          http_request_timeout: 5000
          dashboard_redirect_uri: ""
          catalog: 
            services:
            - id: autoscaler-guid
              name: autoscaler
              description: Automatically increase or decrease the number of application instances based on a policy you define.
              bindable: true
              plans:
              - id: autoscaler-free-plan-id
                name: autoscaler-free-plan
                description: This is the free service plan for the Auto-Scaling service.
          api_server:
            ca_cert: ((apiserver_ca.ca))
            client_cert: ((apiserver_client.certificate))
            client_key: ((apiserver_client.private_key))
          require_consul: false
        binding_db: *database
  - name: route_registrar
    release: routing
    consumes:
      nats: {from: nats, deployment: cf}
    properties:
      route_registrar:
        routes:
        - name: api_server_public_api
          registration_interval: 20s
          port: *apiServerPublicPort
          tags:
            component: api_server
          uris:
            - autoscaler.((system_domain))
        - name: autoscaler_service_broker
          registration_interval: 20s
          port: *servicebrokerPort
          tags:
            component: autoscaler_service_broker
          uris:
            - autoscalerservicebroker.((system_domain))

# asmetrics Instance Group: metricscollector&eventgenerator
- name: asmetrics
  azs:
  - z1
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: small
  update:
    max_in_flight: 1
    serial: true
  jobs:
  - name: consul_agent
    release: consul
    consumes:
      consul_common: {from: consul_common_link, deployment: cf}
      consul_server: nil
      consul_client: {from: consul_client_link, deployment: cf}
    properties:
      consul:
        agent:
          services:
            metricscollector:
              check:
                tcp: 127.0.0.1:6103
                interval: 30s
                timeout: 10s
            eventgenerator: 
              check:
                tcp: 127.0.0.1:6105
                interval: 30s
                timeout: 10s
  - name: metricscollector
    release: app-autoscaler
    properties:
      autoscaler:
        instancemetrics_db: *database
        policy_db: *database
        instancemetrics_db_connection_config: *databaseConnectionConfig
        policy_db_connection_config: *databaseConnectionConfig
        cf: *cf_credentials
        metricscollector:
          logging:
            level: debug
          http_client_timeout: 60s
          server:
            port: &metricsCollectorPort 6103
          health:
            port: &metricsCollectorHealthPort 6203
          collector:
            refresh_interval: 60s
            collect_interval: 30s
            save_interval: 5s
          ca_cert: ((metricscollector_ca.ca))
          server_cert: ((metricscollector_server.certificate))
          server_key: ((metricscollector_server.private_key))
          require_consul: true
  - name: eventgenerator
    release: app-autoscaler
    properties:
      autoscaler:
        appmetrics_db: *database
        policy_db: *database
        appmetrics_db_connection_config: *databaseConnectionConfig
        policy_db_connection_config: *databaseConnectionConfig
        eventgenerator:
          logging:
            level: debug
          http_client_timeout: 60s
          server:
            port: &eventGeneratorPort 6105
          health:
            port: &eventGeneratorHealthPort 6205
          ca_cert: ((eventgenerator_ca.ca))
          server_cert: ((eventgenerator_server.certificate))
          server_key: ((eventgenerator_server.private_key))
          aggregator:
            aggregator_execute_interval: 40s
            policy_poller_interval: 40s
            metric_poller_count: 20
            app_monitor_channel_size: 200
            save_interval: 5s
            app_metric_channel_size: 1000
          evaluator:
            evaluation_manager_execute_interval: 40s
            evaluator_count: 20
            trigger_array_channel_size: 200
          defaultStatWindowSecs: 120
          defaultBreachDurationSecs: 120
          circuitBreaker:
            back_off_initial_interval: 5m
            back_off_max_interval: 120m
            consecutive_failure_count: 5
          scaling_engine:
            host: scalingengine.service.cf.internal
            port: *scalingEnginePort
            ca_cert: ((scalingengine_ca.ca))
            client_cert: ((scalingengine_client.certificate))
            client_key: ((scalingengine_client.private_key))
          metricscollector:
            host: metricscollector.service.cf.internal
            port: *metricsCollectorPort
            ca_cert: ((metricscollector_ca.ca))
            client_cert: ((metricscollector_client.certificate))
            client_key: ((metricscollector_client.private_key))
          require_consul: false
  



variables:
- name: database_password
  type: password
- name: autoscaler_service_broker_password
  type: password
- name: scalingengine_ca
  type: certificate
  options:
    is_ca: true
    common_name: scalingengineCA
- name: scalingengine_server
  type: certificate
  options:
    ca: scalingengine_ca
    common_name: scalingengine.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: scalingengine_client
  type: certificate
  options:
    ca: scalingengine_ca
    common_name: scalingengine client
    extended_key_usage:
    - client_auth
- name: metricscollector_ca
  type: certificate
  options:
    is_ca: true
    common_name: metricscollectorCA
- name: metricscollector_server
  type: certificate
  options:
    ca: metricscollector_ca
    common_name: metricscollector.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: metricscollector_client
  type: certificate
  options:
    ca: metricscollector_ca
    common_name: metricscollector client
    extended_key_usage:
    - client_auth
- name: eventgenerator_ca
  type: certificate
  options:
    is_ca: true
    common_name: eventgeneratorCA
- name: eventgenerator_server
  type: certificate
  options:
    ca: eventgenerator_ca
    common_name: eventgenerator.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: eventgenerator_client
  type: certificate
  options:
    ca: eventgenerator_ca
    common_name: eventgenerator client
    extended_key_usage:
    - client_auth      
- name: apiserver_ca
  type: certificate
  options:
    is_ca: true
    common_name: apiserverCA
- name: apiserver_server
  type: certificate
  options:
    ca: apiserver_ca
    common_name: apiserver.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: apiserver_public_ca
  type: certificate
  options:
    is_ca: true
    common_name: apiserverpublicCA
- name: apiserver_public_server
  type: certificate
  options:
    ca: apiserver_public_ca
    common_name: autoscaler.((system_domain))
    extended_key_usage:
    - client_auth
    - server_auth
- name: apiserver_client
  type: certificate
  options:
    ca: apiserver_ca
    common_name: apiserver client
    extended_key_usage:
    - client_auth
- name: servicebroker_ca
  type: certificate
  options:
    is_ca: true
    common_name: servicebrokerCA
- name: servicebroker_server
  type: certificate
  options:
    ca: servicebroker_ca
    common_name: servicebroker.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: servicebroker_client
  type: certificate
  options:
    ca: servicebroker_ca
    common_name: servicebroker client
    extended_key_usage:
    - client_auth
- name: servicebroker_public_ca
  type: certificate
  options:
    is_ca: true
    common_name: servicebrokerCA
- name: servicebroker_public_server
  type: certificate
  options:
    ca: servicebroker_public_ca
    common_name: autoscalerservicebroker.((system_domain))
    extended_key_usage:
    - client_auth
    - server_auth
- name: scheduler_ca
  type: certificate
  options:
    is_ca: true
    common_name: schedulerCA
- name: scheduler_server
  type: certificate
  options:
    ca: scheduler_ca
    common_name: autoscalerscheduler.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
- name: scheduler_client
  type: certificate
  options:
    ca: scheduler_ca
    common_name: scheduler client
    extended_key_usage:
    - client_auth
