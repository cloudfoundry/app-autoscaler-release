name: Acceptance Tests â€“ Reusable
on:
  workflow_call:
    inputs:
      buildin_mode:
        required: true
        type: boolean
      service_offering_enabled:
        required: true
        type: boolean
      suites:
        required: true
        type: string
    secrets:
      bbl_ssh_key:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  MAVEN_VERSION: 3.6.3
  MAVEN_SHA: c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
  BUILDIN_MODE: "${{ inputs.buildin_mode }}"
  GITHUB_TOKEN: "${{ secrets.github_token }}"
  SERVICE_OFFERING_ENABLED: "${{ inputs.service_offering_enabled }}"
  PR_NUMBER: "${{ github.event.pull_request.number }}"
  DEPLOYMENT_NAME: "autoscaler-${{ github.event.pull_request.number }}"
  SERVICE_BROKER_NAME: "autoscaler-${{ github.event.pull_request.number }}servicebroker"
  SERVICE_NAME: "autoscaler-${{ github.event.pull_request.number }}"
  BBL_STATE_PATH: "${{ github.workspace }}/bbl/bbl-state"
  NAME_PREFIX: "autoscaler-${{ github.event.pull_request.number }}-TESTS"
  GINKGO_OPTS: "--fail-fast"
  NODES: 4
  AUTOSCALER_DIR: "${{ github.workspace }}/app-autoscaler-release"
  CI_DIR: "${{ github.workspace }}/app-autoscaler-release/ci"
  CHECK_NAME: "${{ github.workflow }}_Check"

jobs:
  create_pending_check:
    # We require jobs for Acceptance Tests in this workflow to trigger on relevant events and labels.
    # Verifcation job must runs always.
    # Adding a non related label to the PR does not require acceptance tests to run, however github will rerun the workflow
    #   and skip all jobs. In such case verification reuses previous check result or exits with failure if a check wasnt created.
    if: |
      ( ( github.event.action == 'opened' || github.event.action == 'synchronize' )
          && ( contains(github.event.pull_request.labels.*.name, 'allow-acceptance-tests') || contains(github.event.pull_request.labels.*.name, 'dependencies') )
      ) ||
      (  ( github.event.action == 'labeled' )
          && ( github.event.label.name == 'allow-acceptance-tests' ||  github.event.label.name == 'dependencies' )
      )
    name: "Create pending check"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - name: Create pending check
        uses: ./app-autoscaler-release/.github/actions/pending-check
        with:
          pending_check: create

  deploy_autoscaler:
    needs: [ create_pending_check ]
    name: Deploy for ${{ github.workflow }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - name: Setup environment for deployment
        uses: ./app-autoscaler-release/.github/actions/setup-environment
        with:
          ssh-key: ${{ secrets.bbl_ssh_key}}
      - name: Deploy autoscaler
        run: |
          cd ${AUTOSCALER_DIR}
          make deployment

  acceptance_tests:
    needs: [ deploy_autoscaler ]
    strategy:
      matrix:
        suite: "${{ fromJSON(inputs.suites) }}"
    runs-on: ubuntu-latest
    name: "[ ${{ matrix.suite }} ] ${{ github.workflow }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - name: Setup environment for acceptance tests
        uses: ./app-autoscaler-release/.github/actions/setup-environment
        with:
          ssh-key: ${{ secrets.bbl_ssh_key}}
      - name: Run acceptance test - ${{ matrix.suite }}
        env:
          MATRIX_SUITE: ${{ matrix.suite }}
        run: |
          cd ${AUTOSCALER_DIR}
          make acceptance-tests SUITES="${MATRIX_SUITE,,}"

  acceptance_tests_verify:
    name: "${{ github.workflow }} Result"
    needs: [ deploy_autoscaler, acceptance_tests ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: app-autoscaler-release
    - name: Verify jobs execution
      uses: ./app-autoscaler-release/.github/actions/pending-check
      with:
        pending_check: verify
        check_filter: ".*${{ github.workflow }}$"

  deployment_cleanup:
    needs: [ acceptance_tests_verify ]
    name: Deployment cleanup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - name: Setup environment for deployment cleanup
        uses: ./app-autoscaler-release/.github/actions/setup-environment
        with:
          ssh-key: ${{ secrets.bbl_ssh_key}}
      - name: Perform deployment cleanup
        run: |
          cd ${AUTOSCALER_DIR}
          make deployment-cleanup
