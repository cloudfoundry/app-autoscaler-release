name: Acceptance Tests â€“ Reusable
on:
  workflow_call:
    inputs:
      self_hosted_image:
        type: string
        default: ghcr.io/cloudfoundry/app-autoscaler-release-tools:main
      suites:
        required: false
        type: string
        default: "[ 'API', 'APP', 'Broker' ]"
      deployment_name:
        required: true
        type: string
      deploy_apps:
        required: false
        type: boolean
      ops_files:
        required: false
        type: string
    secrets:
      bbl_ssh_key:
        required: true

defaults:
  run:
    shell: bash

env:
  PR_NUMBER: "${{ github.event.pull_request.number }}"
  DEPLOYMENT_NAME: "${{ inputs.deployment_name }}"
  BBL_STATE_PATH: "${{ github.workspace }}/bbl/bbl-state"
  GINKGO_OPTS: "--fail-fast"
  NODES: 4
  AUTOSCALER_DIR: "${{ github.workspace }}/app-autoscaler-release"
  CI_DIR: "${{ github.workspace }}/app-autoscaler-release/ci"
  CPU_UPPER_THRESHOLD: 200

jobs:
  deploy_autoscaler:
    name: Deploy
    runs-on: ubuntu-latest
    container:
      image: "${{ inputs.self_hosted_image }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: app-autoscaler-release
      - name: Setup environment for deployment
        uses: ./app-autoscaler-release/.github/actions/setup-environment
        with:
          ssh-key: ${{ secrets.bbl_ssh_key}}
      - name: Deploy autoscaler
        shell: bash
        env:
          OPS_FILES: ${{ inputs.ops_files }}
        run: make --directory="${AUTOSCALER_DIR}" deploy-autoscaler

      - name: Deploy Apps
        shell: bash
        run: make --directory="${AUTOSCALER_DIR}" deploy-apps
        if: ${{ inputs.deploy_apps }}

  acceptance_tests:
    name: Acceptance Tests
    needs: [ deploy_autoscaler ]
    strategy:
      matrix:
        suite: "${{ fromJSON(inputs.suites) }}"
    runs-on: ubuntu-latest
    container:
      image: "${{ inputs.self_hosted_image }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: app-autoscaler-release
      - name: Setup environment for acceptance tests
        uses: ./app-autoscaler-release/.github/actions/setup-environment
        with:
          ssh-key: ${{ secrets.bbl_ssh_key}}
      - name: Run acceptance test - ${{ matrix.suite }}
        env:
          MATRIX_SUITE: ${{ matrix.suite }}
        shell: bash
        run: |
          #! /usr/bin/env bash
          set -eu -o pipefail

          make --directory="${AUTOSCALER_DIR}/src/acceptance/assets/app/go_app" generate-fakes
          make --directory="${AUTOSCALER_DIR}/src/autoscaler" generate-fakes

          make --directory="${AUTOSCALER_DIR}" acceptance-tests SUITES="${MATRIX_SUITE,,}"

  deployment_cleanup:
    needs: [ deploy_autoscaler, acceptance_tests ]
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-cleanup')"
    name: Cleanup
    runs-on: ubuntu-latest
    container:
      image: "${{ inputs.self_hosted_image }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: app-autoscaler-release
      - name: Setup environment for deployment cleanup
        uses: ./app-autoscaler-release/.github/actions/setup-environment
        with:
          ssh-key: ${{ secrets.bbl_ssh_key}}
      - name: Perform deployment cleanup
        run: |
          make --directory="${AUTOSCALER_DIR}" deploy-cleanup

  # This job will run and fail if any of the jobs it depends on fail or are cancelled.
  # It is an "ugly workaround" for an issue on GitHub Actions side, where
  # skipped jobs are considered successful.
  # See https://github.com/actions/runner/issues/2566#issuecomment-1523814835
  result:
      needs: acceptance_tests
      if: ${{ cancelled() || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'failure') }}
      name: Result
      runs-on: ubuntu-latest
      steps:
        - run: |
            echo "Some required workflows have failed!"
            exit 1
