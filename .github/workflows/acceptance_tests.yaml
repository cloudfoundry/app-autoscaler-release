name: Acceptance Tests
on:
  pull_request:
    types: [ opened, labeled, synchronize ]
env:
  MAVEN_VERSION: 3.6.3
  MAVEN_SHA: c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
  DEPLOYMENT_NAME: "app-autoscaler-${{ github.event.pull_request.number }}"
  SERVICE_BROKER_NAME: "app-autoscaler-${{ github.event.pull_request.number }}servicebroker"
  SERVICE_NAME: "autoscaler-${{ github.event.pull_request.number }}"
  BBL_STATE_PATH: "${{ github.workspace }}/bbl/bbl-state"
  SYSTEM_DOMAIN: "autoscaler.ci.cloudfoundry.org"
  SERVICE_OFFERING_ENABLED: true
  SKIP_SSL_VALIDATION: true
  NAME_PREFIX: "app-autoscaler-${{ github.event.pull_request.number }}-TESTS"
  NODES: 3
  AUTOSCALER_DIR: "${{ github.workspace }}/app-autoscaler-release"
  CI_DIR: "${{ github.workspace }}/app-autoscaler-release/ci"
  check_name: "acceptance_test_check"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  start_pending_result:
    # if open and synchronised events happen just check if it has the label
    #  or if label event and has the correct label added we might be able to just remove this
    if: |
      ( ( github.event.action == 'opened' || github.event.action == 'synchronize' )
          && ( contains(github.event.pull_request.labels.*.name, 'allow-acceptance-tests') || contains(github.event.pull_request.labels.*.name, 'dependencies') )
      ) ||
      (  ( github.event.action == 'labeled' )
          && ( github.event.label.name == 'allow-acceptance-tests' ||  github.event.label.name == 'dependencies' )
      )
    name: Post pending Acceptance test result
    runs-on: ubuntu-latest
    outputs:
      check_id: ${{ steps.create_check.outputs.check_id }}
    steps:
      - run: echo "sha is ${{github.event.pull_request.head.sha}}"
      - run: |
          echo "::group::Creating new check"
          
          curl -vf -X POST \
            --retry 5 \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/check-runs" \
            -d '{ "name": "${{env.check_name}}","head_sha": "${{ github.event.pull_request.head.sha }}","status": "in_progress","external_id": "${{ github.run_id }}","output":{ "title":"Acceptance Test running", "summary":"acceptance tests for commit ${{ github.event.pull_request.head.sha }}","text":"some text" }}' \
            -o new_check.json
            
          id=$(jq -r '.id' new_check.json)
  
          if [ -z "${id}" ]; then
            echo "ERROR: Failed to create the required check job"
            echo "Result of curl:"
            cat new_check.json
            exit 1
          fi
          echo "::endgroup::"
          
          echo "Id is: ${id}"
          echo "::set-output name=check_id::${id}"
        id: create_check
        name: Adding initial pending acceptance test result

  #Note: All the tests that can fail and should be reported in the error result need to end with "acceptance tests" to enable filtering of the checks.
  deploy_autoscaler:
    needs: [ start_pending_result ]
    name: "Deploy for acceptance tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - uses: ./app-autoscaler-release/.github/actions/acceptance_tests_common
        with:
          ssh-key: ${{ secrets.BBL_SSH_KEY }}

      - name: run update
        run: cd ${AUTOSCALER_DIR}; ./scripts/update


      # TODO: When removing metricserver and metricgateway merge enable-log-cache.yml into the default templates/app-autoscaler.yml manifest.
      - name: deploy autoscaler
        run: |
          export OPS_FILES="${AUTOSCALER_DIR}/example/operation/loggregator-certs-from-cf.yml\
            ${AUTOSCALER_DIR}/example/operation/add-extra-plan.yml\
            ${AUTOSCALER_DIR}/example/operation/set-release-version.yml\
            ${AUTOSCALER_DIR}/example/operation/enable-name-based-deployments.yml\
            ${AUTOSCALER_DIR}/example/operation/enable-log-cache.yml\
            ${AUTOSCALER_DIR}/example/operation/log-cache-syslog-server.yml"
          ${CI_DIR}/autoscaler/scripts/deploy-autoscaler.sh

      - name: register autoscaler broker
        run: ${CI_DIR}/autoscaler/scripts/register-broker.sh

  acceptance_test_api:
    needs: [ deploy_autoscaler ]
    name: "API acceptance tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - uses: ./app-autoscaler-release/.github/actions/acceptance_tests_common
        with:
          ssh-key: ${{ secrets.BBL_SSH_KEY }}

      - name: run acceptance test - api
        run: |
          export SUITES="api"
          ${CI_DIR}/autoscaler/scripts/run-acceptance-tests.sh

  acceptance_test_app:
    needs: [ deploy_autoscaler ]
    name: "APP acceptance tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - uses: ./app-autoscaler-release/.github/actions/acceptance_tests_common
        with:
          ssh-key: ${{ secrets.BBL_SSH_KEY }}

      - name: run acceptance test - app
        run: |
          export SUITES="app"
          ${CI_DIR}/autoscaler/scripts/run-acceptance-tests.sh

  acceptance_test_broker:
    needs: [ deploy_autoscaler ]
    name: "Broker acceptance tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - uses: ./app-autoscaler-release/.github/actions/acceptance_tests_common
        with:
          ssh-key: ${{ secrets.BBL_SSH_KEY }}

      - name: run acceptance tests - broker
        run: |
          export SUITES="broker"
          ${CI_DIR}/autoscaler/scripts/run-acceptance-tests.sh

  ### This is a final node to indicate the completion of all the acceptance tests
  completed_run:
    needs: [ start_pending_result, acceptance_test_app, acceptance_test_broker, acceptance_test_api ]
    name: Posting test result
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -sf -X PATCH \
            --retry 5 \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/check-runs/${{needs.start_pending_result.outputs.check_id}}" \
            -d '{ "name": "${{env.check_name}}", "status": "completed", "conclusion": "success" }'

  deployment_cleanup:
    needs: [ completed_run ]
    name: Cleanup deployments
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - uses: ./app-autoscaler-release/.github/actions/acceptance_tests_common
        with:
          ssh-key: ${{ secrets.BBL_SSH_KEY }}
      - run: "${CI_DIR}/autoscaler/scripts/cleanup-autoscaler.sh"

  report_result:
    needs: [ completed_run ]
    if: ${{ always() }}
    name: Acceptance Tests Result
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve and assume last acceptance test result
        run: |
          echo "::group::Getting the latest acceptance test result"
          set -eo pipefail
          echo "Getting the last result"
          curl -sf  -H "Accept: application/vnd.github+json" \
            --retry 5 \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${{ github.event.pull_request.head.sha }}/check-runs" \
            | jq '[.check_runs[] | select(.name=="${{env.check_name}}")]' > results.json
          jq '.|last' results.json > latest_result.json
          check_suite=$( jq '.check_suite.id' latest_result.json )
          id=$( jq '.id' latest_result.json )
          conclusion=$( jq -r '.conclusion' latest_result.json )
          number_of_checks=$(jq '. | length' results.json)
          echo "== Latest ${{env.check_name}} check result =="
          echo
          cat latest_result.json
          echo "::endgroup::"
          
          echo "::group::Check Info"
          echo "Latest check id:${id}"
          echo "Number of checks for commit ${{ github.event.pull_request.head.sha }} ${number_of_checks}"
          echo "Conclustion of check: ${conclusion}"
          echo "::endgroup::"
          
          if [ ${number_of_checks} -eq 0 ]; then
            echo "Error: The Acceptance tests have never been run for this commit!"
            echo "Add the correct label to enable the running of the acceptance tests."
            exit 1
          fi
          
          if [ "${conclusion}" != "success" ]; then
            echo "Error: The latest Acceptance Test run failed!"
            echo 
            echo "List of the failed checks:"
            echo "=========================="
            curl -sf --retry 5 "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${{ github.event.pull_request.head.sha }}/check-runs" \
                |  jq '.check_runs[] | select(.conclusion == "failure") | select(.name? | match(".*acceptance tests")) | " - \(.name): \(.html_url)"'
            echo "=========================="
            exit 1
          fi
