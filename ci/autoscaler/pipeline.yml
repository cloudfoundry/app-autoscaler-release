---
anchors:

  app-autoscaler-ops-files: &app-autoscaler-ops-files
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/loggregator-certs-from-cf.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml

  app-autoscaler-ops-files-log-cache: &app-autoscaler-ops-files-log-cache
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/loggregator-certs-from-cf.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml
      operations/enable-log-cache.yml
      operations/log-cache-syslog-server.yml

  app-autoscaler-ops-files-upgrade: &app-autoscaler-ops-files-upgrade
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/loggregator-certs-from-cf.yml
      operations/postgres-persistent-disk.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml

  app-autoscaler-ops-files-buildin: &app-autoscaler-ops-files-buildin
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/loggregator-certs-from-cf.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml
      operations/enable-log-cache.yml
      operations/log-cache-syslog-server.yml
      operations/use_buildin_mode.yml

groups:
- name: all
  jobs:
  - set-pipeline
  - unit-tests
  - integration-tests
  - acceptance
  - acceptance-log-cache
  - acceptance-buildin
  - draft
  - release
  - upgrade-test
  - update-golang
  - update-java
  - performance
- name: autoscaler-release
  jobs:
  - set-pipeline
  - unit-tests
  - integration-tests
  - acceptance
  - acceptance-log-cache
  - acceptance-buildin
  - draft
  - release
  - upgrade-test
- name: update-sdks
  jobs:
    - update-golang
    - update-java
- name: maintenance
  jobs:
    - cleanup-autoscaler-deployments

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: pull-request
  type: docker-image
  source:
    repository: ghcr.io/bonzofenix/github-pr-resource
    tag: master

- name: github-release
  type: docker-image
  source:
    repository: concourse/github-release-resource

resources:
- name: every-night
  type: time
- name: ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/app-autoscaler-release
    private_key: ((autoscaler_git_key))
    branch: ((branch_name))
    fetch_tags: true
    paths:
      - ci

- name: app-autoscaler-release
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/app-autoscaler-release
    private_key: ((autoscaler_git_key))
    branch: ((branch_name))
    fetch_tags: true

- name: gh-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: app-autoscaler-release
    access_token: ((autoscaler_access_token))

- name: previous-stable-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/app-autoscaler-release

- name: bbl-state
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/app-autoscaler-env-bbl-state
    private_key: ((autoscaler_bbl_git_key))
    branch: main

- name: release-bucket
  type: gcs-resource
  source:
    bucket: app-autoscaler-releases
    json_key: ((autoscaler_releases_uploader_key))
    regexp: releases/app-autoscaler-v(.*).tgz

- name: acceptance-tests-bucket
  type: gcs-resource
  source:
    bucket: app-autoscaler-releases
    json_key: ((autoscaler_releases_uploader_key))
    regexp: releases/app-autoscaler-acceptance-tests-v(.*).tgz
    initial_path: releases/app-autoscaler-acceptance-tests-v0.0.1.tgz

- name: golang-release
  type: git
  icon: github
  check_every: 5m
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    branch: master
    version_depth: 20

- name: java-release
  type: git
  icon: github
  check_every: 5m
  source:
    uri:  https://github.com/bosh-packages/java-release.git
    branch: master
    version_depth: 20

jobs:
- name: set-pipeline
  public: true
  plan:
  - get: ci
    trigger: true
  - set_pipeline: self
    file: ci/ci/autoscaler/pipeline.yml
    vars:
      branch_name: ((branch_name))

- name: unit-tests
  public: true
  build_logs_to_retain: 100
  serial: true
  plan:
  - in_parallel:
    - get: app-autoscaler-release
      trigger: true
    - get: ci
  - task: run-unit-tests
    file: ci/ci/autoscaler/tasks/run-unit-tests.yml
    attempts: 3

- name: integration-tests
  public: true
  build_logs_to_retain: 100
  serial: true
  serial_groups: [integration]
  plan:
  - in_parallel:
    - get: app-autoscaler-release
      trigger: true
    - get: ci
  - task: run-integration-tests
    file: ci/ci/autoscaler/tasks/run-integration-tests.yml

- name: acceptance
  public: true
  build_logs_to_retain: 100
  serial: true
  on_success:
    task: cleanup
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &acceptance-params
      DEPLOYMENT_NAME: "acceptance"
      DEBUG: true
  plan:
  - in_parallel:
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [unit-tests, integration-tests]
      trigger: true
    - get: ci
  - task: make-prerelease
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: mod-tidy vendor db scheduler
  - task: deploy-autoscaler
    file: ci/ci/autoscaler/tasks/deploy-autoscaler.yml
    params:
      <<: *acceptance-params
      <<: *app-autoscaler-ops-files
  - task: register-broker
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *acceptance-params
  - in_parallel:
    - task: autoscaler-acceptance-api
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-params
        SUITES: api
    - task: autoscaler-acceptance-app
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-params
        SUITES: app
    - task: autoscaler-acceptance-broker
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-params
        SUITES: broker

- name: acceptance-log-cache
  public: true
  build_logs_to_retain: 100
  serial: true
  on_success:
    task: cleanup
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &acceptance-log-cache-params
      DEPLOYMENT_NAME: "acceptance-lc"
      DEBUG: true
  plan:
  - in_parallel:
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [unit-tests, integration-tests]
      trigger: true
    - get: ci
  - task: make-prerelease
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: mod-tidy vendor db scheduler
  - task: deploy-autoscaler
    file: ci/ci/autoscaler/tasks/deploy-autoscaler.yml
    params:
      <<: *acceptance-log-cache-params
      <<: *app-autoscaler-ops-files-log-cache
  - task: register-broker
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *acceptance-log-cache-params
  - in_parallel:
    - task: autoscaler-acceptance-api
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-params
        SUITES: api
    - task: autoscaler-acceptance-app
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-params
        SUITES: app
    - task: autoscaler-acceptance-broker
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-params
        SUITES: broker

- name: acceptance-buildin
  public: true
  build_logs_to_retain: 100
  serial: true
  on_success:
    task: cleanup
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &acceptance-buildin-params
      DEPLOYMENT_NAME: "acceptance-bld"
      BUILDIN_MODE: true
      SERVICE_OFFERING_ENABLED: false
      DEBUG: true
  plan:
  - in_parallel:
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [unit-tests, integration-tests]
      trigger: true
    - get: ci
  - task: make-prerelease
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: mod-tidy vendor db scheduler
  - task: deploy-autoscaler
    file: ci/ci/autoscaler/tasks/deploy-autoscaler.yml
    params:
      <<: *acceptance-buildin-params
      <<: *app-autoscaler-ops-files-buildin
  - in_parallel:
    - task: autoscaler-acceptance-api
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-buildin-params
        SUITES: api
    - task: autoscaler-acceptance-app
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-buildin-params
        SUITES: app

- name: performance
  public: true
  build_logs_to_retain: 100
  ensure:
    task: cleanup
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &performance-env
      DEPLOYMENT_NAME: "autoscaler-performance"
      NODES: 1
      GINKGO_OPTS: "--fail-fast"
      SERIAL: "false"
  plan:
  - in_parallel:
    - get: ci
    - get: bbl-state
    - get: app-autoscaler-release
  - task: make-prerelease
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: mod-tidy vendor db scheduler
  - task: deploy-autoscaler
    file: ci/ci/autoscaler/tasks/deploy-autoscaler.yml
    params:
      <<: *performance-env
      <<: *app-autoscaler-ops-files
  - task: register-broker
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *performance-env
  - task: setup-performance
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: setup-performance
  - task: run-performance
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: run-performance


- name: upgrade-test
  public: true
  build_logs_to_retain: 100
  on_success:
      task: cleanup
      file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
      params: &upgrade-test-params
        DEPLOYMENT_NAME: "upgrade-test"
        DEBUG: true
  plan:
  - in_parallel:
    - get: bbl-state
    - get: ci
    - get: app-autoscaler-release
      passed:
      - acceptance
      - acceptance-log-cache
      - acceptance-buildin
      trigger: true
    - get: previous-stable-release
  - task: deploy-previous-stable-release
    file: ci/ci/autoscaler/tasks/deploy-previous-autoscaler.yml
    params:
      <<: *upgrade-test-params
      <<: *app-autoscaler-ops-files-upgrade
  - task: register-broker
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *upgrade-test-params
  - task: autoscaler-pre-upgrade
    file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
    params:
      <<: *upgrade-test-params
      SUITES: |
        pre_upgrade
      NODES: 1
  - task: make-prerelease
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: mod-tidy vendor db scheduler
  - task: deploy-autoscaler
    file: ci/ci/autoscaler/tasks/deploy-autoscaler.yml
    params:
      <<: *upgrade-test-params
      <<: *app-autoscaler-ops-files-upgrade
  - task: autoscaler-post-upgrade
    file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
    params:
      <<: *upgrade-test-params
      SUITES: |
        post_upgrade
      NODES: 1

- name: release
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: release-bucket
    - get: acceptance-tests-bucket
    - get: gh-release
    - get: app-autoscaler-release
      passed: [upgrade-test]
    - get: ci
  - task: make-prerelease
    file: ci/ci/autoscaler/tasks/make/make.yml
    params:
      TARGETS: mod-tidy vendor db scheduler
  - task: release-autoscaler
    file: ci/ci/autoscaler/tasks/release-autoscaler.yml
    params:
      UPLOADER_KEY: ((autoscaler_blobstore_uploader_key))
      GITHUB_TOKEN: ((autoscaler_access_token))
  - put: release-bucket
    params:
      file: "build/artifacts/app-autoscaler-v*.tgz"
  - put: acceptance-tests-bucket
    params:
      file: "build/artifacts/app-autoscaler-acceptance-tests-v*.tgz"
  - put: gh-release
    params:
      name: build/name
      tag: build/tag
      body: build/changelog.md
      globs: [build/artifacts/*]
      commitish: app-autoscaler-release/.git/ref
  - put: app-autoscaler-release
    params:
      rebase: true
      repository: app-autoscaler-release

- name: cleanup-autoscaler-deployments
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: bbl-state
    - get: ci
    - get: every-night
      trigger: true
  - task: cleanup-autoscaler-deployments
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler-deployments.yml

- name: draft
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: ci
    - get: gh-release
    - get: app-autoscaler-release
      passed: [upgrade-test]
      trigger: true
  - task: dummy-release-autoscaler
    file: ci/ci/autoscaler/tasks/release-autoscaler.yml
    params:
      UPLOADER_KEY: ((autoscaler_blobstore_uploader_key))
      GITHUB_TOKEN: ((autoscaler_access_token))
      PERFORM_BOSH_RELEASE: false

- name: update-golang
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: app-autoscaler-release
    - get: java-release
    - get: golang-release
      trigger: true
    - get: ci
  - task: update-golang-sdk
    file: ci/ci/autoscaler/tasks/update-sdk/task.yml
    params:
      type: golang

- name: update-java
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: app-autoscaler-release
    - get: java-release
      trigger: true
    - get: golang-release
    - get: ci
  - task: update-java-sdk
    file: ci/ci/autoscaler/tasks/update-sdk/task.yml
    params:
      type: java
