---
anchors:
  make-prerelease-task: &make-prerelease-task
    task: "make-prerelease"
    image: "app-autoscaler-tools"
    file: "ci/ci/autoscaler/tasks/make/make.yaml"
    params:
      TARGETS: "build_all"
    timeout: "25m"

  deploy-autoscaler-task: &deploy-autoscaler-task
    task: "deploy-autoscaler"
    image: "app-autoscaler-tools"
    file: "ci/ci/autoscaler/tasks/make/make.yaml"
    params:
      TARGETS: "deploy-autoscaler"

  app-autoscaler-ops-files-log-cache-metron: &app-autoscaler-ops-files-log-cache-metron
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml
      operations/enable-metricsforwarder-via-metron-agent.yml
      operations/enable-scheduler-logging.yml
      operations/add-custom-tags.yml

  app-autoscaler-ops-files-log-cache-syslog: &app-autoscaler-ops-files-log-cache-syslog
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml
      operations/enable-scheduler-logging.yml
      operations/add-custom-tags.yml

  app-autoscaler-ops-files-log-cache-syslog-cf: &app-autoscaler-ops-files-log-cache-syslog-cf
    ENABLE_MTAR: true
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml
      operations/enable-metricsforwarder-via-syslog-agent.yml
      operations/enable-scheduler-logging.yml
      operations/add-custom-tags.yml

  app-autoscaler-ops-files-upgrade: &app-autoscaler-ops-files-upgrade
    OPS_FILES: |
      operations/add-releases.yml
      operations/instance-identity-cert-from-cf.yml
      operations/add-postgres-variables.yml
      operations/enable-nats-tls.yml
      operations/postgres-persistent-disk.yml
      operations/add-extra-plan.yml
      operations/set-release-version.yml
      operations/add-custom-tags.yml

groups:
- name: all
  jobs:
  - acceptance-log-cache-metron
  - acceptance-log-cache-syslog
  - acceptance-log-cache-syslog-cf
  - cleanup-autoscaler-deployments
  - fetch-latest-stemcell
  - draft
  - integration-tests
  - performance
  - release
  - set-pipeline
  - unit-tests
  - upgrade-test
  - update-golang
  - update-java
- name: autoscaler-release
  jobs:
  - acceptance-log-cache-metron
  - acceptance-log-cache-syslog
  - draft
  - integration-tests
  - release
  - set-pipeline
  - unit-tests
  - upgrade-test
- name: update-sdks
  jobs:
    - update-golang
    - update-java
- name: maintenance
  jobs:
    - cleanup-autoscaler-deployments
    - fetch-latest-stemcell

resource_types:
- name: gcs-resource
  type: registry-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: "app-autoscaler-tools"
  type: "registry-image"
  source:
    repository: "ghcr.io/cloudfoundry/app-autoscaler-release-tools"
    tag: "main"

- name: every-night
  type: time
  source:
    start: 10:00 PM
    stop: 11:00 PM
    location: "Europe/Berlin"

- name: ci
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/app-autoscaler-release
    private_key: ((autoscaler-deploy-key-private))
    branch: ((branch_name))
    fetch_tags: true
    paths:
      - ci

- name: app-autoscaler-release
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/app-autoscaler-release
    private_key: ((autoscaler-deploy-key-private))
    branch: ((branch_name))
    fetch_tags: true

- name: gh-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: app-autoscaler-release
    access_token: ((autoscaler_access_token))

- name: previous-stable-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/app-autoscaler-release

- name: bbl-state
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/app-autoscaler-env-bbl-state
    private_key: ((autoscaler_bbl_git_key))
    branch: main

- name: release-bucket
  type: gcs-resource
  source:
    bucket: app-autoscaler-releases
    json_key: ((autoscaler_releases_uploader_key))
    regexp: releases/app-autoscaler-v(.*).tgz

- name: acceptance-tests-bucket
  type: gcs-resource
  source:
    bucket: app-autoscaler-releases
    json_key: ((autoscaler_releases_uploader_key))
    regexp: releases/app-autoscaler-acceptance-tests-v(.*).tgz
    initial_path: releases/app-autoscaler-acceptance-tests-v0.0.1.tgz

- name: mtar-bucket
  type: gcs-resource
  source:
    bucket: app-autoscaler-releases
    json_key: ((autoscaler_releases_uploader_key))
    regexp: releases/app-autoscaler-v(.*).mtar
    initial_path: releases/app-autoscaler-v0.0.1.mtar

- name: golang-release
  type: git
  icon: github
  check_every: 5m
  source:
    uri: https://github.com/cloudfoundry/bosh-package-golang-release.git
    branch: main
    version_depth: 20
    tag_filter: v0.*

- name: java-release
  type: github-release
  icon: github
  check_every: 5m
  source:
    owner: SAP
    repository: SapMachine
    access_token: ((autoscaler_access_token))
    release: true
    tag_filter: "sapmachine-21.*"

- name: gcp-jammy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent

jobs:
- name: set-pipeline
  public: true
  plan:
  - get: ci
    trigger: true
  - set_pipeline: self
    file: ci/ci/autoscaler/pipeline.yml
    vars:
      branch_name: ((branch_name))
      acceptance_deployment_name: ((acceptance_deployment_name))
      acceptance_deployment_name_logcache_metron: ((acceptance_deployment_name_logcache_metron))
      acceptance_deployment_name_logcache_syslog: ((acceptance_deployment_name_logcache_syslog))
      acceptance_deployment_name_logcache_syslog_cf: ((acceptance_deployment_name_logcache_syslog_cf))
      pr_number: ((pr_number))

- name: unit-tests
  public: true
  build_logs_to_retain: 100
  serial: true
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: app-autoscaler-release
      trigger: true
    - get: ci
  - task: run-unit-tests
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/run-unit-tests.yml
    attempts: 3
    timeout: 45m

- name: integration-tests
  public: true
  build_logs_to_retain: 100
  serial: true
  serial_groups: [integration]
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: app-autoscaler-release
      trigger: true
    - get: ci
  - task: run-integration-tests
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/run-integration-tests.yml
    timeout: 45m

- name: acceptance-log-cache-metron
  public: true
  build_logs_to_retain: 100
  serial: true
  on_success:
    task: cleanup
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &acceptance-log-cache-metron-params
      DEPLOYMENT_NAME: ((acceptance_deployment_name_logcache_metron))
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [unit-tests, integration-tests]
      trigger: true
    - get: ci
  - *make-prerelease-task
  - <<: *deploy-autoscaler-task
    params:
      TARGETS: "deploy-autoscaler"
      <<: *acceptance-log-cache-metron-params
      <<: *app-autoscaler-ops-files-log-cache-metron
    timeout: "30m"
  - task: register-broker
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *acceptance-log-cache-metron-params
    timeout: 5m
  - in_parallel:
    - task: autoscaler-acceptance-api
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-metron-params
        SUITES: api
      timeout: 30m
    - task: autoscaler-acceptance-app
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-metron-params
        SUITES: app
      timeout: 60m
    - task: autoscaler-acceptance-broker
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-metron-params
        SUITES: broker
      timeout: 30m

- name: acceptance-log-cache-syslog
  public: true
  build_logs_to_retain: 100
  serial: true
  on_success:
    task: cleanup
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &acceptance-log-cache-syslog-params
      DEPLOYMENT_NAME: ((acceptance_deployment_name_logcache_syslog))
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [unit-tests, integration-tests]
      trigger: true
    - get: ci
  - *make-prerelease-task
  - <<: *deploy-autoscaler-task
    params:
      TARGETS: "deploy-autoscaler"
      <<: *acceptance-log-cache-syslog-params
      <<: *app-autoscaler-ops-files-log-cache-syslog
    timeout: 30m
  - task: register-broker
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *acceptance-log-cache-syslog-params
    timeout: 5m
  - in_parallel:
    - task: autoscaler-acceptance-api
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-syslog-params
        SUITES: api
      timeout: 30m
    - task: autoscaler-acceptance-app
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-syslog-params
        SUITES: app
      timeout: 60m
    - task: autoscaler-acceptance-broker
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-syslog-params
        SUITES: broker
      timeout: 30m

- name: acceptance-log-cache-syslog-cf
  public: true
  build_logs_to_retain: 100
  serial: true
  on_success:
    task: cleanup
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &acceptance-log-cache-syslog-cf-params
      DEPLOYMENT_NAME: ((acceptance_deployment_name_logcache_syslog_cf))
      PR_NUMBER: ((pr_number))
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [unit-tests, integration-tests]
      trigger: true
    - get: ci
  - *make-prerelease-task
  - <<: *deploy-autoscaler-task
    params:
      TARGETS: "deploy-autoscaler"
      <<: *acceptance-log-cache-syslog-cf-params
      <<: *app-autoscaler-ops-files-log-cache-syslog-cf
  - task: deploy-apps
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/deploy-apps.yml
    params:
      <<: *acceptance-log-cache-syslog-cf-params
    timeout: 30m
  - task: register-broker
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *acceptance-log-cache-syslog-cf-params
    timeout: 5m
  - in_parallel:
    - task: autoscaler-acceptance-api
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-syslog-cf-params
        SUITES: api
      timeout: 15m
    - task: autoscaler-acceptance-app
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-syslog-cf-params
        SUITES: app
      timeout: 45m
    - task: autoscaler-acceptance-broker
      image: "app-autoscaler-tools"
      file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
      params:
        <<: *acceptance-log-cache-syslog-cf-params
        SUITES: broker
      timeout: 15m

- name: performance
  public: true
  build_logs_to_retain: 100
  on_failure:
    task: cleanup
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &performance-env
      DEPLOYMENT_NAME: "autoscaler-performance"
      NODES: 1
      GINKGO_OPTS: "--fail-fast"
      SERIAL: "false"
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: ci
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [unit-tests, integration-tests]
      trigger: true
  - *make-prerelease-task
  - <<: *deploy-autoscaler-task
    params:
      TARGETS: "deploy-autoscaler"
      <<: *performance-env
      <<: *app-autoscaler-ops-files-log-cache-syslog
    timeout: 30m
  - task: register-broker
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *performance-env
    timeout: 5m
  - task: setup-performance
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/make/make.yaml
    params:
     TARGETS: setup-performance
    timeout: 15m
  - task: run-performance
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/make/make.yaml
    params:
     TARGETS: run-performance
    timeout: 15m

- name: upgrade-test
  public: true
  build_logs_to_retain: 100
  on_success:
    task: cleanup
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler.yml
    params: &upgrade-test-params
      DEPLOYMENT_NAME: "upgrade-test"
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: bbl-state
    - get: ci
    - get: app-autoscaler-release
      passed:
      - acceptance-log-cache-metron
      - acceptance-log-cache-syslog
      - acceptance-log-cache-syslog-cf
      trigger: true
    - get: previous-stable-release
  - task: deploy-previous-stable-release
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/deploy-previous-autoscaler.yml
    params:
      <<: *upgrade-test-params
      <<: *app-autoscaler-ops-files-upgrade
    timeout: 30m
  - task: register-broker
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/register-broker.yml
    params:
      <<: *upgrade-test-params
    timeout: 5m
  - task: autoscaler-pre-upgrade
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
    params:
      <<: *upgrade-test-params
      SUITES: |
        pre_upgrade
      NODES: 1
    timeout: 30m
  - *make-prerelease-task
  - <<: *deploy-autoscaler-task
    params:
      TARGETS: "deploy-autoscaler"
      <<: *upgrade-test-params
      <<: *app-autoscaler-ops-files-upgrade
    timeout: 30m
  - task: autoscaler-post-upgrade
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/run-acceptance-tests.yml
    params:
      <<: *upgrade-test-params
      SUITES: |
        post_upgrade
      NODES: 1
    timeout: 30m

- name: release
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
    - get: release-bucket
    - get: acceptance-tests-bucket
    - get: gh-release
    - get: bbl-state
    - get: app-autoscaler-release
      passed: [upgrade-test]
    - get: ci
  - task: make-prerelease
    file: ci/ci/autoscaler/tasks/make/make.yaml
    image: "app-autoscaler-tools"
    params:
      # ⚠️ Here it is used that make officially guarantees to reach the goals in the provided order.
      TARGETS: generate-fakes generate-openapi-generated-clients-and-servers go-mod-tidy go-mod-vendor db.java-libs scheduler.build
  - task: release-autoscaler
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/release-autoscaler.yml
    params:
      DEBUG: true
      UPLOADER_KEY: ((autoscaler_blobstore_uploader_key))
      GITHUB_TOKEN: ((autoscaler_access_token))
      AUTOSCALER_CI_BOT_NAME: app-autoscaler-ci-bot
      AUTOSCALER_CI_BOT_EMAIL: ApplicationAutoscaler@sap.com
      AUTOSCALER_CI_BOT_SIGNING_KEY_PRIVATE: ((autoscaler-ci-bot-signing-key-private))
      AUTOSCALER_CI_BOT_SIGNING_KEY_PUBLIC: ((autoscaler-ci-bot-signing-key-public))
  - put: release-bucket
    params:
      file: "build/artifacts/app-autoscaler-v*.tgz"
  - put: acceptance-tests-bucket
    params:
      file: "build/artifacts/app-autoscaler-acceptance-tests-v*.tgz"
  - put: mtar-bucket
    params:
      file: "build/artifacts/app-autoscaler-release-v*.mtar"
  - put: app-autoscaler-release
    params:
      rebase: true
      repository: app-autoscaler-release
      tag: build/tag
  - put: gh-release
    params:
      name: build/name
      tag: build/tag
      body: build/changelog.md
      globs: [build/artifacts/*]

- name: cleanup-autoscaler-deployments
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
    - get: bbl-state
    - get: ci
    - get: every-night
      trigger: true
  - task: cleanup-autoscaler-deployments
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/cleanup-autoscaler-deployments.yml

- name: fetch-latest-stemcell
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
    - get: bbl-state
    - get: ci
    - get: every-night
      passed: [ cleanup-autoscaler-deployments ]
      trigger: true
    - get: gcp-jammy-stemcell
  - task: fetch-latest-stemcell
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/fetch-latest-stemcell.yml

- name: draft
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: "app-autoscaler-tools"
      trigger: true
    - get: ci
    - get: gh-release
    - get: app-autoscaler-release
      passed: [upgrade-test]
      trigger: true
  - task: dummy-release-autoscaler
    image: "app-autoscaler-tools"
    file: ci/ci/autoscaler/tasks/release-autoscaler.yml
    params:
      UPLOADER_KEY: ((autoscaler_blobstore_uploader_key))
      GITHUB_TOKEN: ((autoscaler_access_token))
      PERFORM_BOSH_RELEASE: false

- name: update-golang
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: app-autoscaler-release
    - get: golang-release
      trigger: true
    - get: ci
  - task: update-golang-sdk
    file: ci/ci/autoscaler/tasks/update-sdk/go_task.yml
    params:
      type: golang

- name: update-java
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: app-autoscaler-release
    - get: java-release
      trigger: true
    - get: ci
  - task: update-java-sdk
    file: ci/ci/autoscaler/tasks/update-sdk/java_task.yml
    params:
      type: java
