parameters: {}
responses:
  Error:
    description: |
      Error, the response body may contain further information.
    content:
      application/json:
        schema:
          $ref: "#/schemas/ErrorResponse"
schemas:
  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: The textual error code.
      message:
        type: string
        description: The message describing the cause of the error.
  GUID:
    description: |
      Identificator used by Cloud Foundry for entities.

      Anything is an entity. Apps, services, service-bindings, â€¦
    type: string
    pattern: (\d|[a-f]){8}-(\d|[a-f]){4}-(\d|[a-f]){4}-(\d|[a-f]){4}-(\d|[a-f]){12}
    example: 8d0cee08-23ad-4813-a779-ad8118ea0b91
  metric_type:
    description: |
      One of system-default metric types memoryused,memoryutil,responsetime, throughput, cpu or user-defined custom metric type
    required: true
    type: string
    enum: ["memoryused", "memoryutil", "responsetime", "throughput", "cpu or custom metric's name"]
    example: memoryused
  threshold:
    description: |
      The boundary when metric value exceeds is considered as a breach
    required: true
    type: int
    format: int64
    example: 30
  operator:
    description: Used for standard operting signs - ">", "<", ">=", "<="
    required: true
    type: string
    enum: [">", "<", ">=", "<="]
    example: <
  adjustment:
    description: |
      The adjustment approach for instance count with each scaling.

      +5 means adding 5 instances, -50% means shrinking to the half of current size.
    required: true
    type: string
    pattern: ^[-+][1-9]+[0-9]*[%]?$
    example: -1
  breach_duration_secs:
    description: |
      Time duration(in seconds) to fire scaling event if it keeps breaching
    type: integer
    format: int64  # this is time in seconds
    example: 600
  cool_down_secs:
    description: |
      The time duration (in seconds) to wait before the next scaling kicks in
    type: integer
    format: int64  # this is time in seconds
    example: 300
  timezone:
    description: Using timezone definition of Java #https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html - Do we need to implement it?
    required: true
    type: string
    example: Asia/Shanghai
  recurring_schedule: 
    type: array
    items:
      $ref: '#/schemas/RecurringSchedule'
  RecurringSchedule:
    AnyOf:
      - $ref: '#/schemas/start_date'
      - $ref: '#/schemas/end_date'
      - $ref: '#/schemas/start_time'
      - $ref: '#/schemas/end_time'
      - $ref: '#/schemas/days_of_week_or_month'
      - $ref: '#/schemas/instance_min_count'
      - $ref: '#/schemas/instance_max_count'
      - $ref: '#/schemas/initial_min_instance_count'
  
  start_date:
    description: the start date of the schedule. Must be a future time
    type: string
    format: date
    example: 2016-06-27
  end_date:
    description: the end date of the schedule. Must be a future time.
    type: string
    format: date
    example: 2016-07-23  
  start_time:
    description: the start time of the schedule in HH:MM format
    required: true
    type: string
    pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
    example: 11:00
  end_time:
    description: the end time of the schedule in HH:MM format
    required: true
    type: string
    pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
    example: 19:30
  end time of the schedule:
    description: |
      recurring days of a week or month. Use [1,2,..,7] or [1,2,...,31] to define it
    type: array
    example: [5, 15, 25]
  instance_min_count:
    description: minimal number of instance count for this schedule
    required: true
    type: integer
    format: int64
    example: 3
  instance_max_count:
    description: maximal number of instance count for this schedule
    required: true
    type: integer
    format: int64
    example: 10
  instance_min_instance_count:
    description: the initial minimal number of instance count for this schedule
    type: integer
    format: int64
    example: 5
  specific_date: 
    type: array
    items:
      $ref: '#/schemas/SpecificDate'
  SpecificDate:
    AnyOf:
      - $ref: '#/schemas/start_date_time'
      - $ref: '#/schemas/end_date_time'
      - $ref: '#/schemas/instance_min_count'
      - $ref: '#/schemas/instance_max_count'
      - $ref: '#/schemas/initial_min_instance_count'
  start_date_time:
    description: the start time of the schedule. Must be a future time
    required: true
    type: string
    pattern: /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]/
    example: 2015-01-04T20:00
  end_date_time: # the doc has this as a start_date_time 
    description: the start time of the schedule. Must be a future time
    required: true
    type: string
    pattern: /[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]/
    example: 2015-01-04T20:00
  instance_min_count:
    description: minimal number of instance count for this schedule
    required: true
    type: integer
    format: int64
    example: 2
  instance_max_count:
    description: maximal number of instance count for this schedule
    required: true
    type: integer
    format: int64
    example: 5
  instance_min_instance_count:
    description: the initial minimal number of instance count for this schedule
    type: integer
    format: int64
    example: 3